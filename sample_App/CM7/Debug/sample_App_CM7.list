
sample_App_CM7.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001570  080002a0  080002a0  000012a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000013c  08001810  08001810  00002810  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800194c  0800194c  000030a4  2**0
                  CONTENTS
  4 .ARM          00000008  0800194c  0800194c  0000294c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001954  08001954  000030a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001954  08001954  00002954  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001958  08001958  00002958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000a4  24000000  0800195c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  240000a4  08001a00  000030a4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  24000210  08001a00  00003210  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000030a4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000acf  00000000  00000000  000030ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003f2  00000000  00000000  00003b9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00003f90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d7  00000000  00000000  000040c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002d4c  00000000  00000000  0000419f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000015f5  00000000  00000000  00006eeb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000097d3  00000000  00000000  000084e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011cb3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000e58  00000000  00000000  00011cf8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000068  00000000  00000000  00012b50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	@ (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	@ (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	@ (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	240000a4 	.word	0x240000a4
 80002bc:	00000000 	.word	0x00000000
 80002c0:	080017f8 	.word	0x080017f8

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	@ (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	@ (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	@ (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	240000a8 	.word	0x240000a8
 80002dc:	080017f8 	.word	0x080017f8

080002e0 <memchr>:
 80002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80002e4:	2a10      	cmp	r2, #16
 80002e6:	db2b      	blt.n	8000340 <memchr+0x60>
 80002e8:	f010 0f07 	tst.w	r0, #7
 80002ec:	d008      	beq.n	8000300 <memchr+0x20>
 80002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002f2:	3a01      	subs	r2, #1
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d02d      	beq.n	8000354 <memchr+0x74>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	b342      	cbz	r2, 8000350 <memchr+0x70>
 80002fe:	d1f6      	bne.n	80002ee <memchr+0xe>
 8000300:	b4f0      	push	{r4, r5, r6, r7}
 8000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800030a:	f022 0407 	bic.w	r4, r2, #7
 800030e:	f07f 0700 	mvns.w	r7, #0
 8000312:	2300      	movs	r3, #0
 8000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000318:	3c08      	subs	r4, #8
 800031a:	ea85 0501 	eor.w	r5, r5, r1
 800031e:	ea86 0601 	eor.w	r6, r6, r1
 8000322:	fa85 f547 	uadd8	r5, r5, r7
 8000326:	faa3 f587 	sel	r5, r3, r7
 800032a:	fa86 f647 	uadd8	r6, r6, r7
 800032e:	faa5 f687 	sel	r6, r5, r7
 8000332:	b98e      	cbnz	r6, 8000358 <memchr+0x78>
 8000334:	d1ee      	bne.n	8000314 <memchr+0x34>
 8000336:	bcf0      	pop	{r4, r5, r6, r7}
 8000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800033c:	f002 0207 	and.w	r2, r2, #7
 8000340:	b132      	cbz	r2, 8000350 <memchr+0x70>
 8000342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000346:	3a01      	subs	r2, #1
 8000348:	ea83 0301 	eor.w	r3, r3, r1
 800034c:	b113      	cbz	r3, 8000354 <memchr+0x74>
 800034e:	d1f8      	bne.n	8000342 <memchr+0x62>
 8000350:	2000      	movs	r0, #0
 8000352:	4770      	bx	lr
 8000354:	3801      	subs	r0, #1
 8000356:	4770      	bx	lr
 8000358:	2d00      	cmp	r5, #0
 800035a:	bf06      	itte	eq
 800035c:	4635      	moveq	r5, r6
 800035e:	3803      	subeq	r0, #3
 8000360:	3807      	subne	r0, #7
 8000362:	f015 0f01 	tst.w	r5, #1
 8000366:	d107      	bne.n	8000378 <memchr+0x98>
 8000368:	3001      	adds	r0, #1
 800036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800036e:	bf02      	ittt	eq
 8000370:	3001      	addeq	r0, #1
 8000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000376:	3001      	addeq	r0, #1
 8000378:	bcf0      	pop	{r4, r5, r6, r7}
 800037a:	3801      	subs	r0, #1
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop

08000380 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
 8000388:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800038a:	2300      	movs	r3, #0
 800038c:	60fb      	str	r3, [r7, #12]
 800038e:	e015      	b.n	80003bc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 8000390:	f000 fa0a 	bl	80007a8 <rand>
 8000394:	4602      	mov	r2, r0
 8000396:	68fb      	ldr	r3, [r7, #12]
 8000398:	009b      	lsls	r3, r3, #2
 800039a:	6879      	ldr	r1, [r7, #4]
 800039c:	4419      	add	r1, r3
 800039e:	4b0c      	ldr	r3, [pc, #48]	@ (80003d0 <array_fill_numbers+0x50>)
 80003a0:	fb83 0302 	smull	r0, r3, r3, r2
 80003a4:	1198      	asrs	r0, r3, #6
 80003a6:	17d3      	asrs	r3, r2, #31
 80003a8:	1ac3      	subs	r3, r0, r3
 80003aa:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80003ae:	fb00 f303 	mul.w	r3, r0, r3
 80003b2:	1ad3      	subs	r3, r2, r3
 80003b4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80003b6:	68fb      	ldr	r3, [r7, #12]
 80003b8:	3301      	adds	r3, #1
 80003ba:	60fb      	str	r3, [r7, #12]
 80003bc:	68fa      	ldr	r2, [r7, #12]
 80003be:	683b      	ldr	r3, [r7, #0]
 80003c0:	429a      	cmp	r2, r3
 80003c2:	d3e5      	bcc.n	8000390 <array_fill_numbers+0x10>
    }

}
 80003c4:	bf00      	nop
 80003c6:	bf00      	nop
 80003c8:	3710      	adds	r7, #16
 80003ca:	46bd      	mov	sp, r7
 80003cc:	bd80      	pop	{r7, pc}
 80003ce:	bf00      	nop
 80003d0:	10624dd3 	.word	0x10624dd3

080003d4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80003d4:	b580      	push	{r7, lr}
 80003d6:	b086      	sub	sp, #24
 80003d8:	af00      	add	r7, sp, #0
 80003da:	60f8      	str	r0, [r7, #12]
 80003dc:	60b9      	str	r1, [r7, #8]
 80003de:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80003e0:	6879      	ldr	r1, [r7, #4]
 80003e2:	480e      	ldr	r0, [pc, #56]	@ (800041c <display_numbers+0x48>)
 80003e4:	f000 fae0 	bl	80009a8 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80003e8:	2300      	movs	r3, #0
 80003ea:	617b      	str	r3, [r7, #20]
 80003ec:	e00b      	b.n	8000406 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80003ee:	697b      	ldr	r3, [r7, #20]
 80003f0:	009b      	lsls	r3, r3, #2
 80003f2:	68fa      	ldr	r2, [r7, #12]
 80003f4:	4413      	add	r3, r2
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	4619      	mov	r1, r3
 80003fa:	4809      	ldr	r0, [pc, #36]	@ (8000420 <display_numbers+0x4c>)
 80003fc:	f000 fad4 	bl	80009a8 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000400:	697b      	ldr	r3, [r7, #20]
 8000402:	3301      	adds	r3, #1
 8000404:	617b      	str	r3, [r7, #20]
 8000406:	697a      	ldr	r2, [r7, #20]
 8000408:	68bb      	ldr	r3, [r7, #8]
 800040a:	429a      	cmp	r2, r3
 800040c:	d3ef      	bcc.n	80003ee <display_numbers+0x1a>
    }

    printf("\n");
 800040e:	200a      	movs	r0, #10
 8000410:	f000 fadc 	bl	80009cc <putchar>
}
 8000414:	bf00      	nop
 8000416:	3718      	adds	r7, #24
 8000418:	46bd      	mov	sp, r7
 800041a:	bd80      	pop	{r7, pc}
 800041c:	08001810 	.word	0x08001810
 8000420:	08001814 	.word	0x08001814

08000424 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000424:	b480      	push	{r7}
 8000426:	b085      	sub	sp, #20
 8000428:	af00      	add	r7, sp, #0
 800042a:	6078      	str	r0, [r7, #4]
 800042c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000434:	683b      	ldr	r3, [r7, #0]
 8000436:	681a      	ldr	r2, [r3, #0]
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800043c:	683b      	ldr	r3, [r7, #0]
 800043e:	68fa      	ldr	r2, [r7, #12]
 8000440:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000442:	4b04      	ldr	r3, [pc, #16]	@ (8000454 <swap_numbers+0x30>)
 8000444:	220a      	movs	r2, #10
 8000446:	601a      	str	r2, [r3, #0]
}
 8000448:	bf00      	nop
 800044a:	3714      	adds	r7, #20
 800044c:	46bd      	mov	sp, r7
 800044e:	bc80      	pop	{r7}
 8000450:	4770      	bx	lr
 8000452:	bf00      	nop
 8000454:	24000044 	.word	0x24000044

08000458 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000458:	b580      	push	{r7, lr}
 800045a:	b086      	sub	sp, #24
 800045c:	af00      	add	r7, sp, #0
 800045e:	6078      	str	r0, [r7, #4]
 8000460:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000462:	2300      	movs	r3, #0
 8000464:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000466:	2300      	movs	r3, #0
 8000468:	617b      	str	r3, [r7, #20]
 800046a:	e02f      	b.n	80004cc <bubble_sort+0x74>
    {
        flag=0;
 800046c:	2300      	movs	r3, #0
 800046e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000470:	2300      	movs	r3, #0
 8000472:	613b      	str	r3, [r7, #16]
 8000474:	e01d      	b.n	80004b2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000476:	693b      	ldr	r3, [r7, #16]
 8000478:	009b      	lsls	r3, r3, #2
 800047a:	687a      	ldr	r2, [r7, #4]
 800047c:	4413      	add	r3, r2
 800047e:	681a      	ldr	r2, [r3, #0]
 8000480:	693b      	ldr	r3, [r7, #16]
 8000482:	3301      	adds	r3, #1
 8000484:	009b      	lsls	r3, r3, #2
 8000486:	6879      	ldr	r1, [r7, #4]
 8000488:	440b      	add	r3, r1
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	429a      	cmp	r2, r3
 800048e:	dd0d      	ble.n	80004ac <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000490:	693b      	ldr	r3, [r7, #16]
 8000492:	009b      	lsls	r3, r3, #2
 8000494:	687a      	ldr	r2, [r7, #4]
 8000496:	18d0      	adds	r0, r2, r3
 8000498:	693b      	ldr	r3, [r7, #16]
 800049a:	3301      	adds	r3, #1
 800049c:	009b      	lsls	r3, r3, #2
 800049e:	687a      	ldr	r2, [r7, #4]
 80004a0:	4413      	add	r3, r2
 80004a2:	4619      	mov	r1, r3
 80004a4:	f7ff ffbe 	bl	8000424 <swap_numbers>
                flag=1;
 80004a8:	2301      	movs	r3, #1
 80004aa:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80004ac:	693b      	ldr	r3, [r7, #16]
 80004ae:	3301      	adds	r3, #1
 80004b0:	613b      	str	r3, [r7, #16]
 80004b2:	697b      	ldr	r3, [r7, #20]
 80004b4:	683a      	ldr	r2, [r7, #0]
 80004b6:	1ad3      	subs	r3, r2, r3
 80004b8:	1e5a      	subs	r2, r3, #1
 80004ba:	693b      	ldr	r3, [r7, #16]
 80004bc:	429a      	cmp	r2, r3
 80004be:	d8da      	bhi.n	8000476 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80004c0:	68fb      	ldr	r3, [r7, #12]
 80004c2:	2b00      	cmp	r3, #0
 80004c4:	d008      	beq.n	80004d8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80004c6:	697b      	ldr	r3, [r7, #20]
 80004c8:	3301      	adds	r3, #1
 80004ca:	617b      	str	r3, [r7, #20]
 80004cc:	683b      	ldr	r3, [r7, #0]
 80004ce:	1e5a      	subs	r2, r3, #1
 80004d0:	697b      	ldr	r3, [r7, #20]
 80004d2:	429a      	cmp	r2, r3
 80004d4:	d8ca      	bhi.n	800046c <bubble_sort+0x14>
            break;
    }
}
 80004d6:	e000      	b.n	80004da <bubble_sort+0x82>
            break;
 80004d8:	bf00      	nop
}
 80004da:	bf00      	nop
 80004dc:	3718      	adds	r7, #24
 80004de:	46bd      	mov	sp, r7
 80004e0:	bd80      	pop	{r7, pc}

080004e2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80004e2:	b480      	push	{r7}
 80004e4:	b087      	sub	sp, #28
 80004e6:	af00      	add	r7, sp, #0
 80004e8:	6078      	str	r0, [r7, #4]
 80004ea:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80004ec:	2301      	movs	r3, #1
 80004ee:	617b      	str	r3, [r7, #20]
 80004f0:	e02c      	b.n	800054c <insertion_sort+0x6a>
     {
         j=i-1;
 80004f2:	697b      	ldr	r3, [r7, #20]
 80004f4:	3b01      	subs	r3, #1
 80004f6:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80004f8:	697b      	ldr	r3, [r7, #20]
 80004fa:	009b      	lsls	r3, r3, #2
 80004fc:	687a      	ldr	r2, [r7, #4]
 80004fe:	4413      	add	r3, r2
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000504:	e00d      	b.n	8000522 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000506:	693b      	ldr	r3, [r7, #16]
 8000508:	009b      	lsls	r3, r3, #2
 800050a:	687a      	ldr	r2, [r7, #4]
 800050c:	441a      	add	r2, r3
 800050e:	693b      	ldr	r3, [r7, #16]
 8000510:	3301      	adds	r3, #1
 8000512:	009b      	lsls	r3, r3, #2
 8000514:	6879      	ldr	r1, [r7, #4]
 8000516:	440b      	add	r3, r1
 8000518:	6812      	ldr	r2, [r2, #0]
 800051a:	601a      	str	r2, [r3, #0]
             j--;
 800051c:	693b      	ldr	r3, [r7, #16]
 800051e:	3b01      	subs	r3, #1
 8000520:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000522:	693b      	ldr	r3, [r7, #16]
 8000524:	2b00      	cmp	r3, #0
 8000526:	db07      	blt.n	8000538 <insertion_sort+0x56>
 8000528:	693b      	ldr	r3, [r7, #16]
 800052a:	009b      	lsls	r3, r3, #2
 800052c:	687a      	ldr	r2, [r7, #4]
 800052e:	4413      	add	r3, r2
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	68fa      	ldr	r2, [r7, #12]
 8000534:	429a      	cmp	r2, r3
 8000536:	dbe6      	blt.n	8000506 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000538:	693b      	ldr	r3, [r7, #16]
 800053a:	3301      	adds	r3, #1
 800053c:	009b      	lsls	r3, r3, #2
 800053e:	687a      	ldr	r2, [r7, #4]
 8000540:	4413      	add	r3, r2
 8000542:	68fa      	ldr	r2, [r7, #12]
 8000544:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000546:	697b      	ldr	r3, [r7, #20]
 8000548:	3301      	adds	r3, #1
 800054a:	617b      	str	r3, [r7, #20]
 800054c:	697b      	ldr	r3, [r7, #20]
 800054e:	683a      	ldr	r2, [r7, #0]
 8000550:	429a      	cmp	r2, r3
 8000552:	d8ce      	bhi.n	80004f2 <insertion_sort+0x10>
     }


}
 8000554:	bf00      	nop
 8000556:	bf00      	nop
 8000558:	371c      	adds	r7, #28
 800055a:	46bd      	mov	sp, r7
 800055c:	bc80      	pop	{r7}
 800055e:	4770      	bx	lr

08000560 <main>:


int main(void)
{
 8000560:	b580      	push	{r7, lr}
 8000562:	b082      	sub	sp, #8
 8000564:	af00      	add	r7, sp, #0

	 unsigned int len = sizeof(numbers)/sizeof(int);
 8000566:	2311      	movs	r3, #17
 8000568:	607b      	str	r3, [r7, #4]

	    array_fill_numbers(numbers,len);
 800056a:	6879      	ldr	r1, [r7, #4]
 800056c:	4813      	ldr	r0, [pc, #76]	@ (80005bc <main+0x5c>)
 800056e:	f7ff ff07 	bl	8000380 <array_fill_numbers>

	    display_numbers(numbers,len,"B-unsorted array :");
 8000572:	4a13      	ldr	r2, [pc, #76]	@ (80005c0 <main+0x60>)
 8000574:	6879      	ldr	r1, [r7, #4]
 8000576:	4811      	ldr	r0, [pc, #68]	@ (80005bc <main+0x5c>)
 8000578:	f7ff ff2c 	bl	80003d4 <display_numbers>

	    bubble_sort(numbers,len);
 800057c:	6879      	ldr	r1, [r7, #4]
 800057e:	480f      	ldr	r0, [pc, #60]	@ (80005bc <main+0x5c>)
 8000580:	f7ff ff6a 	bl	8000458 <bubble_sort>

	    display_numbers(numbers,len,"B-sorted array   :");
 8000584:	4a0f      	ldr	r2, [pc, #60]	@ (80005c4 <main+0x64>)
 8000586:	6879      	ldr	r1, [r7, #4]
 8000588:	480c      	ldr	r0, [pc, #48]	@ (80005bc <main+0x5c>)
 800058a:	f7ff ff23 	bl	80003d4 <display_numbers>

	    array_fill_numbers(numbers,len);
 800058e:	6879      	ldr	r1, [r7, #4]
 8000590:	480a      	ldr	r0, [pc, #40]	@ (80005bc <main+0x5c>)
 8000592:	f7ff fef5 	bl	8000380 <array_fill_numbers>

	    display_numbers(numbers,len,"I-unsorted array :");
 8000596:	4a0c      	ldr	r2, [pc, #48]	@ (80005c8 <main+0x68>)
 8000598:	6879      	ldr	r1, [r7, #4]
 800059a:	4808      	ldr	r0, [pc, #32]	@ (80005bc <main+0x5c>)
 800059c:	f7ff ff1a 	bl	80003d4 <display_numbers>

	    insertion_sort(numbers,len);
 80005a0:	6879      	ldr	r1, [r7, #4]
 80005a2:	4806      	ldr	r0, [pc, #24]	@ (80005bc <main+0x5c>)
 80005a4:	f7ff ff9d 	bl	80004e2 <insertion_sort>

	    display_numbers(numbers,len,"I-sorted array   :");
 80005a8:	4a08      	ldr	r2, [pc, #32]	@ (80005cc <main+0x6c>)
 80005aa:	6879      	ldr	r1, [r7, #4]
 80005ac:	4803      	ldr	r0, [pc, #12]	@ (80005bc <main+0x5c>)
 80005ae:	f7ff ff11 	bl	80003d4 <display_numbers>



	    return 0;
 80005b2:	2300      	movs	r3, #0
}
 80005b4:	4618      	mov	r0, r3
 80005b6:	3708      	adds	r7, #8
 80005b8:	46bd      	mov	sp, r7
 80005ba:	bd80      	pop	{r7, pc}
 80005bc:	24000000 	.word	0x24000000
 80005c0:	0800181c 	.word	0x0800181c
 80005c4:	08001830 	.word	0x08001830
 80005c8:	08001844 	.word	0x08001844
 80005cc:	08001858 	.word	0x08001858

080005d0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80005d0:	b480      	push	{r7}
 80005d2:	af00      	add	r7, sp, #0
  return 1;
 80005d4:	2301      	movs	r3, #1
}
 80005d6:	4618      	mov	r0, r3
 80005d8:	46bd      	mov	sp, r7
 80005da:	bc80      	pop	{r7}
 80005dc:	4770      	bx	lr

080005de <_kill>:

int _kill(int pid, int sig)
{
 80005de:	b580      	push	{r7, lr}
 80005e0:	b082      	sub	sp, #8
 80005e2:	af00      	add	r7, sp, #0
 80005e4:	6078      	str	r0, [r7, #4]
 80005e6:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80005e8:	f000 fa8a 	bl	8000b00 <__errno>
 80005ec:	4603      	mov	r3, r0
 80005ee:	2216      	movs	r2, #22
 80005f0:	601a      	str	r2, [r3, #0]
  return -1;
 80005f2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80005f6:	4618      	mov	r0, r3
 80005f8:	3708      	adds	r7, #8
 80005fa:	46bd      	mov	sp, r7
 80005fc:	bd80      	pop	{r7, pc}

080005fe <_exit>:

void _exit (int status)
{
 80005fe:	b580      	push	{r7, lr}
 8000600:	b082      	sub	sp, #8
 8000602:	af00      	add	r7, sp, #0
 8000604:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000606:	f04f 31ff 	mov.w	r1, #4294967295
 800060a:	6878      	ldr	r0, [r7, #4]
 800060c:	f7ff ffe7 	bl	80005de <_kill>
  while (1) {}    /* Make sure we hang here */
 8000610:	bf00      	nop
 8000612:	e7fd      	b.n	8000610 <_exit+0x12>

08000614 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000614:	b580      	push	{r7, lr}
 8000616:	b086      	sub	sp, #24
 8000618:	af00      	add	r7, sp, #0
 800061a:	60f8      	str	r0, [r7, #12]
 800061c:	60b9      	str	r1, [r7, #8]
 800061e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000620:	2300      	movs	r3, #0
 8000622:	617b      	str	r3, [r7, #20]
 8000624:	e00a      	b.n	800063c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000626:	f3af 8000 	nop.w
 800062a:	4601      	mov	r1, r0
 800062c:	68bb      	ldr	r3, [r7, #8]
 800062e:	1c5a      	adds	r2, r3, #1
 8000630:	60ba      	str	r2, [r7, #8]
 8000632:	b2ca      	uxtb	r2, r1
 8000634:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000636:	697b      	ldr	r3, [r7, #20]
 8000638:	3301      	adds	r3, #1
 800063a:	617b      	str	r3, [r7, #20]
 800063c:	697a      	ldr	r2, [r7, #20]
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	429a      	cmp	r2, r3
 8000642:	dbf0      	blt.n	8000626 <_read+0x12>
  }

  return len;
 8000644:	687b      	ldr	r3, [r7, #4]
}
 8000646:	4618      	mov	r0, r3
 8000648:	3718      	adds	r7, #24
 800064a:	46bd      	mov	sp, r7
 800064c:	bd80      	pop	{r7, pc}

0800064e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800064e:	b580      	push	{r7, lr}
 8000650:	b086      	sub	sp, #24
 8000652:	af00      	add	r7, sp, #0
 8000654:	60f8      	str	r0, [r7, #12]
 8000656:	60b9      	str	r1, [r7, #8]
 8000658:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800065a:	2300      	movs	r3, #0
 800065c:	617b      	str	r3, [r7, #20]
 800065e:	e009      	b.n	8000674 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000660:	68bb      	ldr	r3, [r7, #8]
 8000662:	1c5a      	adds	r2, r3, #1
 8000664:	60ba      	str	r2, [r7, #8]
 8000666:	781b      	ldrb	r3, [r3, #0]
 8000668:	4618      	mov	r0, r3
 800066a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800066e:	697b      	ldr	r3, [r7, #20]
 8000670:	3301      	adds	r3, #1
 8000672:	617b      	str	r3, [r7, #20]
 8000674:	697a      	ldr	r2, [r7, #20]
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	429a      	cmp	r2, r3
 800067a:	dbf1      	blt.n	8000660 <_write+0x12>
  }
  return len;
 800067c:	687b      	ldr	r3, [r7, #4]
}
 800067e:	4618      	mov	r0, r3
 8000680:	3718      	adds	r7, #24
 8000682:	46bd      	mov	sp, r7
 8000684:	bd80      	pop	{r7, pc}

08000686 <_close>:

int _close(int file)
{
 8000686:	b480      	push	{r7}
 8000688:	b083      	sub	sp, #12
 800068a:	af00      	add	r7, sp, #0
 800068c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800068e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000692:	4618      	mov	r0, r3
 8000694:	370c      	adds	r7, #12
 8000696:	46bd      	mov	sp, r7
 8000698:	bc80      	pop	{r7}
 800069a:	4770      	bx	lr

0800069c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800069c:	b480      	push	{r7}
 800069e:	b083      	sub	sp, #12
 80006a0:	af00      	add	r7, sp, #0
 80006a2:	6078      	str	r0, [r7, #4]
 80006a4:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80006a6:	683b      	ldr	r3, [r7, #0]
 80006a8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80006ac:	605a      	str	r2, [r3, #4]
  return 0;
 80006ae:	2300      	movs	r3, #0
}
 80006b0:	4618      	mov	r0, r3
 80006b2:	370c      	adds	r7, #12
 80006b4:	46bd      	mov	sp, r7
 80006b6:	bc80      	pop	{r7}
 80006b8:	4770      	bx	lr

080006ba <_isatty>:

int _isatty(int file)
{
 80006ba:	b480      	push	{r7}
 80006bc:	b083      	sub	sp, #12
 80006be:	af00      	add	r7, sp, #0
 80006c0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80006c2:	2301      	movs	r3, #1
}
 80006c4:	4618      	mov	r0, r3
 80006c6:	370c      	adds	r7, #12
 80006c8:	46bd      	mov	sp, r7
 80006ca:	bc80      	pop	{r7}
 80006cc:	4770      	bx	lr

080006ce <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80006ce:	b480      	push	{r7}
 80006d0:	b085      	sub	sp, #20
 80006d2:	af00      	add	r7, sp, #0
 80006d4:	60f8      	str	r0, [r7, #12]
 80006d6:	60b9      	str	r1, [r7, #8]
 80006d8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80006da:	2300      	movs	r3, #0
}
 80006dc:	4618      	mov	r0, r3
 80006de:	3714      	adds	r7, #20
 80006e0:	46bd      	mov	sp, r7
 80006e2:	bc80      	pop	{r7}
 80006e4:	4770      	bx	lr
	...

080006e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80006e8:	b580      	push	{r7, lr}
 80006ea:	b086      	sub	sp, #24
 80006ec:	af00      	add	r7, sp, #0
 80006ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80006f0:	4a14      	ldr	r2, [pc, #80]	@ (8000744 <_sbrk+0x5c>)
 80006f2:	4b15      	ldr	r3, [pc, #84]	@ (8000748 <_sbrk+0x60>)
 80006f4:	1ad3      	subs	r3, r2, r3
 80006f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80006f8:	697b      	ldr	r3, [r7, #20]
 80006fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80006fc:	4b13      	ldr	r3, [pc, #76]	@ (800074c <_sbrk+0x64>)
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	2b00      	cmp	r3, #0
 8000702:	d102      	bne.n	800070a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000704:	4b11      	ldr	r3, [pc, #68]	@ (800074c <_sbrk+0x64>)
 8000706:	4a12      	ldr	r2, [pc, #72]	@ (8000750 <_sbrk+0x68>)
 8000708:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800070a:	4b10      	ldr	r3, [pc, #64]	@ (800074c <_sbrk+0x64>)
 800070c:	681a      	ldr	r2, [r3, #0]
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	4413      	add	r3, r2
 8000712:	693a      	ldr	r2, [r7, #16]
 8000714:	429a      	cmp	r2, r3
 8000716:	d207      	bcs.n	8000728 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000718:	f000 f9f2 	bl	8000b00 <__errno>
 800071c:	4603      	mov	r3, r0
 800071e:	220c      	movs	r2, #12
 8000720:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000722:	f04f 33ff 	mov.w	r3, #4294967295
 8000726:	e009      	b.n	800073c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000728:	4b08      	ldr	r3, [pc, #32]	@ (800074c <_sbrk+0x64>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800072e:	4b07      	ldr	r3, [pc, #28]	@ (800074c <_sbrk+0x64>)
 8000730:	681a      	ldr	r2, [r3, #0]
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	4413      	add	r3, r2
 8000736:	4a05      	ldr	r2, [pc, #20]	@ (800074c <_sbrk+0x64>)
 8000738:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800073a:	68fb      	ldr	r3, [r7, #12]
}
 800073c:	4618      	mov	r0, r3
 800073e:	3718      	adds	r7, #24
 8000740:	46bd      	mov	sp, r7
 8000742:	bd80      	pop	{r7, pc}
 8000744:	24080000 	.word	0x24080000
 8000748:	00000400 	.word	0x00000400
 800074c:	240000c0 	.word	0x240000c0
 8000750:	24000210 	.word	0x24000210

08000754 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000754:	480d      	ldr	r0, [pc, #52]	@ (800078c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000756:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000758:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800075c:	480c      	ldr	r0, [pc, #48]	@ (8000790 <LoopForever+0x6>)
  ldr r1, =_edata
 800075e:	490d      	ldr	r1, [pc, #52]	@ (8000794 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000760:	4a0d      	ldr	r2, [pc, #52]	@ (8000798 <LoopForever+0xe>)
  movs r3, #0
 8000762:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000764:	e002      	b.n	800076c <LoopCopyDataInit>

08000766 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000766:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000768:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800076a:	3304      	adds	r3, #4

0800076c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800076c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800076e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000770:	d3f9      	bcc.n	8000766 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000772:	4a0a      	ldr	r2, [pc, #40]	@ (800079c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000774:	4c0a      	ldr	r4, [pc, #40]	@ (80007a0 <LoopForever+0x16>)
  movs r3, #0
 8000776:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000778:	e001      	b.n	800077e <LoopFillZerobss>

0800077a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800077a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800077c:	3204      	adds	r2, #4

0800077e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800077e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000780:	d3fb      	bcc.n	800077a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000782:	f000 f9c3 	bl	8000b0c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000786:	f7ff feeb 	bl	8000560 <main>

0800078a <LoopForever>:

LoopForever:
  b LoopForever
 800078a:	e7fe      	b.n	800078a <LoopForever>
  ldr   r0, =_estack
 800078c:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8000790:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8000794:	240000a4 	.word	0x240000a4
  ldr r2, =_sidata
 8000798:	0800195c 	.word	0x0800195c
  ldr r2, =_sbss
 800079c:	240000a4 	.word	0x240000a4
  ldr r4, =_ebss
 80007a0:	24000210 	.word	0x24000210

080007a4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007a4:	e7fe      	b.n	80007a4 <ADC1_2_IRQHandler>
	...

080007a8 <rand>:
 80007a8:	4b16      	ldr	r3, [pc, #88]	@ (8000804 <rand+0x5c>)
 80007aa:	b510      	push	{r4, lr}
 80007ac:	681c      	ldr	r4, [r3, #0]
 80007ae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80007b0:	b9b3      	cbnz	r3, 80007e0 <rand+0x38>
 80007b2:	2018      	movs	r0, #24
 80007b4:	f000 fa3a 	bl	8000c2c <malloc>
 80007b8:	4602      	mov	r2, r0
 80007ba:	6320      	str	r0, [r4, #48]	@ 0x30
 80007bc:	b920      	cbnz	r0, 80007c8 <rand+0x20>
 80007be:	4b12      	ldr	r3, [pc, #72]	@ (8000808 <rand+0x60>)
 80007c0:	4812      	ldr	r0, [pc, #72]	@ (800080c <rand+0x64>)
 80007c2:	2152      	movs	r1, #82	@ 0x52
 80007c4:	f000 f9ca 	bl	8000b5c <__assert_func>
 80007c8:	4911      	ldr	r1, [pc, #68]	@ (8000810 <rand+0x68>)
 80007ca:	4b12      	ldr	r3, [pc, #72]	@ (8000814 <rand+0x6c>)
 80007cc:	e9c0 1300 	strd	r1, r3, [r0]
 80007d0:	4b11      	ldr	r3, [pc, #68]	@ (8000818 <rand+0x70>)
 80007d2:	6083      	str	r3, [r0, #8]
 80007d4:	230b      	movs	r3, #11
 80007d6:	8183      	strh	r3, [r0, #12]
 80007d8:	2100      	movs	r1, #0
 80007da:	2001      	movs	r0, #1
 80007dc:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80007e0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80007e2:	480e      	ldr	r0, [pc, #56]	@ (800081c <rand+0x74>)
 80007e4:	690b      	ldr	r3, [r1, #16]
 80007e6:	694c      	ldr	r4, [r1, #20]
 80007e8:	4a0d      	ldr	r2, [pc, #52]	@ (8000820 <rand+0x78>)
 80007ea:	4358      	muls	r0, r3
 80007ec:	fb02 0004 	mla	r0, r2, r4, r0
 80007f0:	fba3 3202 	umull	r3, r2, r3, r2
 80007f4:	3301      	adds	r3, #1
 80007f6:	eb40 0002 	adc.w	r0, r0, r2
 80007fa:	e9c1 3004 	strd	r3, r0, [r1, #16]
 80007fe:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8000802:	bd10      	pop	{r4, pc}
 8000804:	24000054 	.word	0x24000054
 8000808:	0800186b 	.word	0x0800186b
 800080c:	08001882 	.word	0x08001882
 8000810:	abcd330e 	.word	0xabcd330e
 8000814:	e66d1234 	.word	0xe66d1234
 8000818:	0005deec 	.word	0x0005deec
 800081c:	5851f42d 	.word	0x5851f42d
 8000820:	4c957f2d 	.word	0x4c957f2d

08000824 <std>:
 8000824:	2300      	movs	r3, #0
 8000826:	b510      	push	{r4, lr}
 8000828:	4604      	mov	r4, r0
 800082a:	e9c0 3300 	strd	r3, r3, [r0]
 800082e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000832:	6083      	str	r3, [r0, #8]
 8000834:	8181      	strh	r1, [r0, #12]
 8000836:	6643      	str	r3, [r0, #100]	@ 0x64
 8000838:	81c2      	strh	r2, [r0, #14]
 800083a:	6183      	str	r3, [r0, #24]
 800083c:	4619      	mov	r1, r3
 800083e:	2208      	movs	r2, #8
 8000840:	305c      	adds	r0, #92	@ 0x5c
 8000842:	f000 f90e 	bl	8000a62 <memset>
 8000846:	4b0d      	ldr	r3, [pc, #52]	@ (800087c <std+0x58>)
 8000848:	6263      	str	r3, [r4, #36]	@ 0x24
 800084a:	4b0d      	ldr	r3, [pc, #52]	@ (8000880 <std+0x5c>)
 800084c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800084e:	4b0d      	ldr	r3, [pc, #52]	@ (8000884 <std+0x60>)
 8000850:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000852:	4b0d      	ldr	r3, [pc, #52]	@ (8000888 <std+0x64>)
 8000854:	6323      	str	r3, [r4, #48]	@ 0x30
 8000856:	4b0d      	ldr	r3, [pc, #52]	@ (800088c <std+0x68>)
 8000858:	6224      	str	r4, [r4, #32]
 800085a:	429c      	cmp	r4, r3
 800085c:	d006      	beq.n	800086c <std+0x48>
 800085e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000862:	4294      	cmp	r4, r2
 8000864:	d002      	beq.n	800086c <std+0x48>
 8000866:	33d0      	adds	r3, #208	@ 0xd0
 8000868:	429c      	cmp	r4, r3
 800086a:	d105      	bne.n	8000878 <std+0x54>
 800086c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000870:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000874:	f000 b96e 	b.w	8000b54 <__retarget_lock_init_recursive>
 8000878:	bd10      	pop	{r4, pc}
 800087a:	bf00      	nop
 800087c:	080009dd 	.word	0x080009dd
 8000880:	080009ff 	.word	0x080009ff
 8000884:	08000a37 	.word	0x08000a37
 8000888:	08000a5b 	.word	0x08000a5b
 800088c:	240000c4 	.word	0x240000c4

08000890 <stdio_exit_handler>:
 8000890:	4a02      	ldr	r2, [pc, #8]	@ (800089c <stdio_exit_handler+0xc>)
 8000892:	4903      	ldr	r1, [pc, #12]	@ (80008a0 <stdio_exit_handler+0x10>)
 8000894:	4803      	ldr	r0, [pc, #12]	@ (80008a4 <stdio_exit_handler+0x14>)
 8000896:	f000 b869 	b.w	800096c <_fwalk_sglue>
 800089a:	bf00      	nop
 800089c:	24000048 	.word	0x24000048
 80008a0:	08001435 	.word	0x08001435
 80008a4:	24000058 	.word	0x24000058

080008a8 <cleanup_stdio>:
 80008a8:	6841      	ldr	r1, [r0, #4]
 80008aa:	4b0c      	ldr	r3, [pc, #48]	@ (80008dc <cleanup_stdio+0x34>)
 80008ac:	4299      	cmp	r1, r3
 80008ae:	b510      	push	{r4, lr}
 80008b0:	4604      	mov	r4, r0
 80008b2:	d001      	beq.n	80008b8 <cleanup_stdio+0x10>
 80008b4:	f000 fdbe 	bl	8001434 <_fflush_r>
 80008b8:	68a1      	ldr	r1, [r4, #8]
 80008ba:	4b09      	ldr	r3, [pc, #36]	@ (80008e0 <cleanup_stdio+0x38>)
 80008bc:	4299      	cmp	r1, r3
 80008be:	d002      	beq.n	80008c6 <cleanup_stdio+0x1e>
 80008c0:	4620      	mov	r0, r4
 80008c2:	f000 fdb7 	bl	8001434 <_fflush_r>
 80008c6:	68e1      	ldr	r1, [r4, #12]
 80008c8:	4b06      	ldr	r3, [pc, #24]	@ (80008e4 <cleanup_stdio+0x3c>)
 80008ca:	4299      	cmp	r1, r3
 80008cc:	d004      	beq.n	80008d8 <cleanup_stdio+0x30>
 80008ce:	4620      	mov	r0, r4
 80008d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008d4:	f000 bdae 	b.w	8001434 <_fflush_r>
 80008d8:	bd10      	pop	{r4, pc}
 80008da:	bf00      	nop
 80008dc:	240000c4 	.word	0x240000c4
 80008e0:	2400012c 	.word	0x2400012c
 80008e4:	24000194 	.word	0x24000194

080008e8 <global_stdio_init.part.0>:
 80008e8:	b510      	push	{r4, lr}
 80008ea:	4b0b      	ldr	r3, [pc, #44]	@ (8000918 <global_stdio_init.part.0+0x30>)
 80008ec:	4c0b      	ldr	r4, [pc, #44]	@ (800091c <global_stdio_init.part.0+0x34>)
 80008ee:	4a0c      	ldr	r2, [pc, #48]	@ (8000920 <global_stdio_init.part.0+0x38>)
 80008f0:	601a      	str	r2, [r3, #0]
 80008f2:	4620      	mov	r0, r4
 80008f4:	2200      	movs	r2, #0
 80008f6:	2104      	movs	r1, #4
 80008f8:	f7ff ff94 	bl	8000824 <std>
 80008fc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000900:	2201      	movs	r2, #1
 8000902:	2109      	movs	r1, #9
 8000904:	f7ff ff8e 	bl	8000824 <std>
 8000908:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800090c:	2202      	movs	r2, #2
 800090e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000912:	2112      	movs	r1, #18
 8000914:	f7ff bf86 	b.w	8000824 <std>
 8000918:	240001fc 	.word	0x240001fc
 800091c:	240000c4 	.word	0x240000c4
 8000920:	08000891 	.word	0x08000891

08000924 <__sfp_lock_acquire>:
 8000924:	4801      	ldr	r0, [pc, #4]	@ (800092c <__sfp_lock_acquire+0x8>)
 8000926:	f000 b916 	b.w	8000b56 <__retarget_lock_acquire_recursive>
 800092a:	bf00      	nop
 800092c:	24000205 	.word	0x24000205

08000930 <__sfp_lock_release>:
 8000930:	4801      	ldr	r0, [pc, #4]	@ (8000938 <__sfp_lock_release+0x8>)
 8000932:	f000 b911 	b.w	8000b58 <__retarget_lock_release_recursive>
 8000936:	bf00      	nop
 8000938:	24000205 	.word	0x24000205

0800093c <__sinit>:
 800093c:	b510      	push	{r4, lr}
 800093e:	4604      	mov	r4, r0
 8000940:	f7ff fff0 	bl	8000924 <__sfp_lock_acquire>
 8000944:	6a23      	ldr	r3, [r4, #32]
 8000946:	b11b      	cbz	r3, 8000950 <__sinit+0x14>
 8000948:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800094c:	f7ff bff0 	b.w	8000930 <__sfp_lock_release>
 8000950:	4b04      	ldr	r3, [pc, #16]	@ (8000964 <__sinit+0x28>)
 8000952:	6223      	str	r3, [r4, #32]
 8000954:	4b04      	ldr	r3, [pc, #16]	@ (8000968 <__sinit+0x2c>)
 8000956:	681b      	ldr	r3, [r3, #0]
 8000958:	2b00      	cmp	r3, #0
 800095a:	d1f5      	bne.n	8000948 <__sinit+0xc>
 800095c:	f7ff ffc4 	bl	80008e8 <global_stdio_init.part.0>
 8000960:	e7f2      	b.n	8000948 <__sinit+0xc>
 8000962:	bf00      	nop
 8000964:	080008a9 	.word	0x080008a9
 8000968:	240001fc 	.word	0x240001fc

0800096c <_fwalk_sglue>:
 800096c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000970:	4607      	mov	r7, r0
 8000972:	4688      	mov	r8, r1
 8000974:	4614      	mov	r4, r2
 8000976:	2600      	movs	r6, #0
 8000978:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800097c:	f1b9 0901 	subs.w	r9, r9, #1
 8000980:	d505      	bpl.n	800098e <_fwalk_sglue+0x22>
 8000982:	6824      	ldr	r4, [r4, #0]
 8000984:	2c00      	cmp	r4, #0
 8000986:	d1f7      	bne.n	8000978 <_fwalk_sglue+0xc>
 8000988:	4630      	mov	r0, r6
 800098a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800098e:	89ab      	ldrh	r3, [r5, #12]
 8000990:	2b01      	cmp	r3, #1
 8000992:	d907      	bls.n	80009a4 <_fwalk_sglue+0x38>
 8000994:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000998:	3301      	adds	r3, #1
 800099a:	d003      	beq.n	80009a4 <_fwalk_sglue+0x38>
 800099c:	4629      	mov	r1, r5
 800099e:	4638      	mov	r0, r7
 80009a0:	47c0      	blx	r8
 80009a2:	4306      	orrs	r6, r0
 80009a4:	3568      	adds	r5, #104	@ 0x68
 80009a6:	e7e9      	b.n	800097c <_fwalk_sglue+0x10>

080009a8 <iprintf>:
 80009a8:	b40f      	push	{r0, r1, r2, r3}
 80009aa:	b507      	push	{r0, r1, r2, lr}
 80009ac:	4906      	ldr	r1, [pc, #24]	@ (80009c8 <iprintf+0x20>)
 80009ae:	ab04      	add	r3, sp, #16
 80009b0:	6808      	ldr	r0, [r1, #0]
 80009b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80009b6:	6881      	ldr	r1, [r0, #8]
 80009b8:	9301      	str	r3, [sp, #4]
 80009ba:	f000 fa15 	bl	8000de8 <_vfiprintf_r>
 80009be:	b003      	add	sp, #12
 80009c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80009c4:	b004      	add	sp, #16
 80009c6:	4770      	bx	lr
 80009c8:	24000054 	.word	0x24000054

080009cc <putchar>:
 80009cc:	4b02      	ldr	r3, [pc, #8]	@ (80009d8 <putchar+0xc>)
 80009ce:	4601      	mov	r1, r0
 80009d0:	6818      	ldr	r0, [r3, #0]
 80009d2:	6882      	ldr	r2, [r0, #8]
 80009d4:	f000 bd68 	b.w	80014a8 <_putc_r>
 80009d8:	24000054 	.word	0x24000054

080009dc <__sread>:
 80009dc:	b510      	push	{r4, lr}
 80009de:	460c      	mov	r4, r1
 80009e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80009e4:	f000 f868 	bl	8000ab8 <_read_r>
 80009e8:	2800      	cmp	r0, #0
 80009ea:	bfab      	itete	ge
 80009ec:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80009ee:	89a3      	ldrhlt	r3, [r4, #12]
 80009f0:	181b      	addge	r3, r3, r0
 80009f2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80009f6:	bfac      	ite	ge
 80009f8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80009fa:	81a3      	strhlt	r3, [r4, #12]
 80009fc:	bd10      	pop	{r4, pc}

080009fe <__swrite>:
 80009fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a02:	461f      	mov	r7, r3
 8000a04:	898b      	ldrh	r3, [r1, #12]
 8000a06:	05db      	lsls	r3, r3, #23
 8000a08:	4605      	mov	r5, r0
 8000a0a:	460c      	mov	r4, r1
 8000a0c:	4616      	mov	r6, r2
 8000a0e:	d505      	bpl.n	8000a1c <__swrite+0x1e>
 8000a10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a14:	2302      	movs	r3, #2
 8000a16:	2200      	movs	r2, #0
 8000a18:	f000 f83c 	bl	8000a94 <_lseek_r>
 8000a1c:	89a3      	ldrh	r3, [r4, #12]
 8000a1e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a22:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000a26:	81a3      	strh	r3, [r4, #12]
 8000a28:	4632      	mov	r2, r6
 8000a2a:	463b      	mov	r3, r7
 8000a2c:	4628      	mov	r0, r5
 8000a2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000a32:	f000 b853 	b.w	8000adc <_write_r>

08000a36 <__sseek>:
 8000a36:	b510      	push	{r4, lr}
 8000a38:	460c      	mov	r4, r1
 8000a3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a3e:	f000 f829 	bl	8000a94 <_lseek_r>
 8000a42:	1c43      	adds	r3, r0, #1
 8000a44:	89a3      	ldrh	r3, [r4, #12]
 8000a46:	bf15      	itete	ne
 8000a48:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000a4a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000a4e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000a52:	81a3      	strheq	r3, [r4, #12]
 8000a54:	bf18      	it	ne
 8000a56:	81a3      	strhne	r3, [r4, #12]
 8000a58:	bd10      	pop	{r4, pc}

08000a5a <__sclose>:
 8000a5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a5e:	f000 b809 	b.w	8000a74 <_close_r>

08000a62 <memset>:
 8000a62:	4402      	add	r2, r0
 8000a64:	4603      	mov	r3, r0
 8000a66:	4293      	cmp	r3, r2
 8000a68:	d100      	bne.n	8000a6c <memset+0xa>
 8000a6a:	4770      	bx	lr
 8000a6c:	f803 1b01 	strb.w	r1, [r3], #1
 8000a70:	e7f9      	b.n	8000a66 <memset+0x4>
	...

08000a74 <_close_r>:
 8000a74:	b538      	push	{r3, r4, r5, lr}
 8000a76:	4d06      	ldr	r5, [pc, #24]	@ (8000a90 <_close_r+0x1c>)
 8000a78:	2300      	movs	r3, #0
 8000a7a:	4604      	mov	r4, r0
 8000a7c:	4608      	mov	r0, r1
 8000a7e:	602b      	str	r3, [r5, #0]
 8000a80:	f7ff fe01 	bl	8000686 <_close>
 8000a84:	1c43      	adds	r3, r0, #1
 8000a86:	d102      	bne.n	8000a8e <_close_r+0x1a>
 8000a88:	682b      	ldr	r3, [r5, #0]
 8000a8a:	b103      	cbz	r3, 8000a8e <_close_r+0x1a>
 8000a8c:	6023      	str	r3, [r4, #0]
 8000a8e:	bd38      	pop	{r3, r4, r5, pc}
 8000a90:	24000200 	.word	0x24000200

08000a94 <_lseek_r>:
 8000a94:	b538      	push	{r3, r4, r5, lr}
 8000a96:	4d07      	ldr	r5, [pc, #28]	@ (8000ab4 <_lseek_r+0x20>)
 8000a98:	4604      	mov	r4, r0
 8000a9a:	4608      	mov	r0, r1
 8000a9c:	4611      	mov	r1, r2
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	602a      	str	r2, [r5, #0]
 8000aa2:	461a      	mov	r2, r3
 8000aa4:	f7ff fe13 	bl	80006ce <_lseek>
 8000aa8:	1c43      	adds	r3, r0, #1
 8000aaa:	d102      	bne.n	8000ab2 <_lseek_r+0x1e>
 8000aac:	682b      	ldr	r3, [r5, #0]
 8000aae:	b103      	cbz	r3, 8000ab2 <_lseek_r+0x1e>
 8000ab0:	6023      	str	r3, [r4, #0]
 8000ab2:	bd38      	pop	{r3, r4, r5, pc}
 8000ab4:	24000200 	.word	0x24000200

08000ab8 <_read_r>:
 8000ab8:	b538      	push	{r3, r4, r5, lr}
 8000aba:	4d07      	ldr	r5, [pc, #28]	@ (8000ad8 <_read_r+0x20>)
 8000abc:	4604      	mov	r4, r0
 8000abe:	4608      	mov	r0, r1
 8000ac0:	4611      	mov	r1, r2
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	602a      	str	r2, [r5, #0]
 8000ac6:	461a      	mov	r2, r3
 8000ac8:	f7ff fda4 	bl	8000614 <_read>
 8000acc:	1c43      	adds	r3, r0, #1
 8000ace:	d102      	bne.n	8000ad6 <_read_r+0x1e>
 8000ad0:	682b      	ldr	r3, [r5, #0]
 8000ad2:	b103      	cbz	r3, 8000ad6 <_read_r+0x1e>
 8000ad4:	6023      	str	r3, [r4, #0]
 8000ad6:	bd38      	pop	{r3, r4, r5, pc}
 8000ad8:	24000200 	.word	0x24000200

08000adc <_write_r>:
 8000adc:	b538      	push	{r3, r4, r5, lr}
 8000ade:	4d07      	ldr	r5, [pc, #28]	@ (8000afc <_write_r+0x20>)
 8000ae0:	4604      	mov	r4, r0
 8000ae2:	4608      	mov	r0, r1
 8000ae4:	4611      	mov	r1, r2
 8000ae6:	2200      	movs	r2, #0
 8000ae8:	602a      	str	r2, [r5, #0]
 8000aea:	461a      	mov	r2, r3
 8000aec:	f7ff fdaf 	bl	800064e <_write>
 8000af0:	1c43      	adds	r3, r0, #1
 8000af2:	d102      	bne.n	8000afa <_write_r+0x1e>
 8000af4:	682b      	ldr	r3, [r5, #0]
 8000af6:	b103      	cbz	r3, 8000afa <_write_r+0x1e>
 8000af8:	6023      	str	r3, [r4, #0]
 8000afa:	bd38      	pop	{r3, r4, r5, pc}
 8000afc:	24000200 	.word	0x24000200

08000b00 <__errno>:
 8000b00:	4b01      	ldr	r3, [pc, #4]	@ (8000b08 <__errno+0x8>)
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	4770      	bx	lr
 8000b06:	bf00      	nop
 8000b08:	24000054 	.word	0x24000054

08000b0c <__libc_init_array>:
 8000b0c:	b570      	push	{r4, r5, r6, lr}
 8000b0e:	4d0d      	ldr	r5, [pc, #52]	@ (8000b44 <__libc_init_array+0x38>)
 8000b10:	4c0d      	ldr	r4, [pc, #52]	@ (8000b48 <__libc_init_array+0x3c>)
 8000b12:	1b64      	subs	r4, r4, r5
 8000b14:	10a4      	asrs	r4, r4, #2
 8000b16:	2600      	movs	r6, #0
 8000b18:	42a6      	cmp	r6, r4
 8000b1a:	d109      	bne.n	8000b30 <__libc_init_array+0x24>
 8000b1c:	4d0b      	ldr	r5, [pc, #44]	@ (8000b4c <__libc_init_array+0x40>)
 8000b1e:	4c0c      	ldr	r4, [pc, #48]	@ (8000b50 <__libc_init_array+0x44>)
 8000b20:	f000 fe6a 	bl	80017f8 <_init>
 8000b24:	1b64      	subs	r4, r4, r5
 8000b26:	10a4      	asrs	r4, r4, #2
 8000b28:	2600      	movs	r6, #0
 8000b2a:	42a6      	cmp	r6, r4
 8000b2c:	d105      	bne.n	8000b3a <__libc_init_array+0x2e>
 8000b2e:	bd70      	pop	{r4, r5, r6, pc}
 8000b30:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b34:	4798      	blx	r3
 8000b36:	3601      	adds	r6, #1
 8000b38:	e7ee      	b.n	8000b18 <__libc_init_array+0xc>
 8000b3a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b3e:	4798      	blx	r3
 8000b40:	3601      	adds	r6, #1
 8000b42:	e7f2      	b.n	8000b2a <__libc_init_array+0x1e>
 8000b44:	08001954 	.word	0x08001954
 8000b48:	08001954 	.word	0x08001954
 8000b4c:	08001954 	.word	0x08001954
 8000b50:	08001958 	.word	0x08001958

08000b54 <__retarget_lock_init_recursive>:
 8000b54:	4770      	bx	lr

08000b56 <__retarget_lock_acquire_recursive>:
 8000b56:	4770      	bx	lr

08000b58 <__retarget_lock_release_recursive>:
 8000b58:	4770      	bx	lr
	...

08000b5c <__assert_func>:
 8000b5c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000b5e:	4614      	mov	r4, r2
 8000b60:	461a      	mov	r2, r3
 8000b62:	4b09      	ldr	r3, [pc, #36]	@ (8000b88 <__assert_func+0x2c>)
 8000b64:	681b      	ldr	r3, [r3, #0]
 8000b66:	4605      	mov	r5, r0
 8000b68:	68d8      	ldr	r0, [r3, #12]
 8000b6a:	b954      	cbnz	r4, 8000b82 <__assert_func+0x26>
 8000b6c:	4b07      	ldr	r3, [pc, #28]	@ (8000b8c <__assert_func+0x30>)
 8000b6e:	461c      	mov	r4, r3
 8000b70:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	462b      	mov	r3, r5
 8000b78:	4905      	ldr	r1, [pc, #20]	@ (8000b90 <__assert_func+0x34>)
 8000b7a:	f000 fc83 	bl	8001484 <fiprintf>
 8000b7e:	f000 fd6b 	bl	8001658 <abort>
 8000b82:	4b04      	ldr	r3, [pc, #16]	@ (8000b94 <__assert_func+0x38>)
 8000b84:	e7f4      	b.n	8000b70 <__assert_func+0x14>
 8000b86:	bf00      	nop
 8000b88:	24000054 	.word	0x24000054
 8000b8c:	08001915 	.word	0x08001915
 8000b90:	080018e7 	.word	0x080018e7
 8000b94:	080018da 	.word	0x080018da

08000b98 <_free_r>:
 8000b98:	b538      	push	{r3, r4, r5, lr}
 8000b9a:	4605      	mov	r5, r0
 8000b9c:	2900      	cmp	r1, #0
 8000b9e:	d041      	beq.n	8000c24 <_free_r+0x8c>
 8000ba0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ba4:	1f0c      	subs	r4, r1, #4
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	bfb8      	it	lt
 8000baa:	18e4      	addlt	r4, r4, r3
 8000bac:	f000 f8e8 	bl	8000d80 <__malloc_lock>
 8000bb0:	4a1d      	ldr	r2, [pc, #116]	@ (8000c28 <_free_r+0x90>)
 8000bb2:	6813      	ldr	r3, [r2, #0]
 8000bb4:	b933      	cbnz	r3, 8000bc4 <_free_r+0x2c>
 8000bb6:	6063      	str	r3, [r4, #4]
 8000bb8:	6014      	str	r4, [r2, #0]
 8000bba:	4628      	mov	r0, r5
 8000bbc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000bc0:	f000 b8e4 	b.w	8000d8c <__malloc_unlock>
 8000bc4:	42a3      	cmp	r3, r4
 8000bc6:	d908      	bls.n	8000bda <_free_r+0x42>
 8000bc8:	6820      	ldr	r0, [r4, #0]
 8000bca:	1821      	adds	r1, r4, r0
 8000bcc:	428b      	cmp	r3, r1
 8000bce:	bf01      	itttt	eq
 8000bd0:	6819      	ldreq	r1, [r3, #0]
 8000bd2:	685b      	ldreq	r3, [r3, #4]
 8000bd4:	1809      	addeq	r1, r1, r0
 8000bd6:	6021      	streq	r1, [r4, #0]
 8000bd8:	e7ed      	b.n	8000bb6 <_free_r+0x1e>
 8000bda:	461a      	mov	r2, r3
 8000bdc:	685b      	ldr	r3, [r3, #4]
 8000bde:	b10b      	cbz	r3, 8000be4 <_free_r+0x4c>
 8000be0:	42a3      	cmp	r3, r4
 8000be2:	d9fa      	bls.n	8000bda <_free_r+0x42>
 8000be4:	6811      	ldr	r1, [r2, #0]
 8000be6:	1850      	adds	r0, r2, r1
 8000be8:	42a0      	cmp	r0, r4
 8000bea:	d10b      	bne.n	8000c04 <_free_r+0x6c>
 8000bec:	6820      	ldr	r0, [r4, #0]
 8000bee:	4401      	add	r1, r0
 8000bf0:	1850      	adds	r0, r2, r1
 8000bf2:	4283      	cmp	r3, r0
 8000bf4:	6011      	str	r1, [r2, #0]
 8000bf6:	d1e0      	bne.n	8000bba <_free_r+0x22>
 8000bf8:	6818      	ldr	r0, [r3, #0]
 8000bfa:	685b      	ldr	r3, [r3, #4]
 8000bfc:	6053      	str	r3, [r2, #4]
 8000bfe:	4408      	add	r0, r1
 8000c00:	6010      	str	r0, [r2, #0]
 8000c02:	e7da      	b.n	8000bba <_free_r+0x22>
 8000c04:	d902      	bls.n	8000c0c <_free_r+0x74>
 8000c06:	230c      	movs	r3, #12
 8000c08:	602b      	str	r3, [r5, #0]
 8000c0a:	e7d6      	b.n	8000bba <_free_r+0x22>
 8000c0c:	6820      	ldr	r0, [r4, #0]
 8000c0e:	1821      	adds	r1, r4, r0
 8000c10:	428b      	cmp	r3, r1
 8000c12:	bf04      	itt	eq
 8000c14:	6819      	ldreq	r1, [r3, #0]
 8000c16:	685b      	ldreq	r3, [r3, #4]
 8000c18:	6063      	str	r3, [r4, #4]
 8000c1a:	bf04      	itt	eq
 8000c1c:	1809      	addeq	r1, r1, r0
 8000c1e:	6021      	streq	r1, [r4, #0]
 8000c20:	6054      	str	r4, [r2, #4]
 8000c22:	e7ca      	b.n	8000bba <_free_r+0x22>
 8000c24:	bd38      	pop	{r3, r4, r5, pc}
 8000c26:	bf00      	nop
 8000c28:	2400020c 	.word	0x2400020c

08000c2c <malloc>:
 8000c2c:	4b02      	ldr	r3, [pc, #8]	@ (8000c38 <malloc+0xc>)
 8000c2e:	4601      	mov	r1, r0
 8000c30:	6818      	ldr	r0, [r3, #0]
 8000c32:	f000 b825 	b.w	8000c80 <_malloc_r>
 8000c36:	bf00      	nop
 8000c38:	24000054 	.word	0x24000054

08000c3c <sbrk_aligned>:
 8000c3c:	b570      	push	{r4, r5, r6, lr}
 8000c3e:	4e0f      	ldr	r6, [pc, #60]	@ (8000c7c <sbrk_aligned+0x40>)
 8000c40:	460c      	mov	r4, r1
 8000c42:	6831      	ldr	r1, [r6, #0]
 8000c44:	4605      	mov	r5, r0
 8000c46:	b911      	cbnz	r1, 8000c4e <sbrk_aligned+0x12>
 8000c48:	f000 fcf6 	bl	8001638 <_sbrk_r>
 8000c4c:	6030      	str	r0, [r6, #0]
 8000c4e:	4621      	mov	r1, r4
 8000c50:	4628      	mov	r0, r5
 8000c52:	f000 fcf1 	bl	8001638 <_sbrk_r>
 8000c56:	1c43      	adds	r3, r0, #1
 8000c58:	d103      	bne.n	8000c62 <sbrk_aligned+0x26>
 8000c5a:	f04f 34ff 	mov.w	r4, #4294967295
 8000c5e:	4620      	mov	r0, r4
 8000c60:	bd70      	pop	{r4, r5, r6, pc}
 8000c62:	1cc4      	adds	r4, r0, #3
 8000c64:	f024 0403 	bic.w	r4, r4, #3
 8000c68:	42a0      	cmp	r0, r4
 8000c6a:	d0f8      	beq.n	8000c5e <sbrk_aligned+0x22>
 8000c6c:	1a21      	subs	r1, r4, r0
 8000c6e:	4628      	mov	r0, r5
 8000c70:	f000 fce2 	bl	8001638 <_sbrk_r>
 8000c74:	3001      	adds	r0, #1
 8000c76:	d1f2      	bne.n	8000c5e <sbrk_aligned+0x22>
 8000c78:	e7ef      	b.n	8000c5a <sbrk_aligned+0x1e>
 8000c7a:	bf00      	nop
 8000c7c:	24000208 	.word	0x24000208

08000c80 <_malloc_r>:
 8000c80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c84:	1ccd      	adds	r5, r1, #3
 8000c86:	f025 0503 	bic.w	r5, r5, #3
 8000c8a:	3508      	adds	r5, #8
 8000c8c:	2d0c      	cmp	r5, #12
 8000c8e:	bf38      	it	cc
 8000c90:	250c      	movcc	r5, #12
 8000c92:	2d00      	cmp	r5, #0
 8000c94:	4606      	mov	r6, r0
 8000c96:	db01      	blt.n	8000c9c <_malloc_r+0x1c>
 8000c98:	42a9      	cmp	r1, r5
 8000c9a:	d904      	bls.n	8000ca6 <_malloc_r+0x26>
 8000c9c:	230c      	movs	r3, #12
 8000c9e:	6033      	str	r3, [r6, #0]
 8000ca0:	2000      	movs	r0, #0
 8000ca2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ca6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000d7c <_malloc_r+0xfc>
 8000caa:	f000 f869 	bl	8000d80 <__malloc_lock>
 8000cae:	f8d8 3000 	ldr.w	r3, [r8]
 8000cb2:	461c      	mov	r4, r3
 8000cb4:	bb44      	cbnz	r4, 8000d08 <_malloc_r+0x88>
 8000cb6:	4629      	mov	r1, r5
 8000cb8:	4630      	mov	r0, r6
 8000cba:	f7ff ffbf 	bl	8000c3c <sbrk_aligned>
 8000cbe:	1c43      	adds	r3, r0, #1
 8000cc0:	4604      	mov	r4, r0
 8000cc2:	d158      	bne.n	8000d76 <_malloc_r+0xf6>
 8000cc4:	f8d8 4000 	ldr.w	r4, [r8]
 8000cc8:	4627      	mov	r7, r4
 8000cca:	2f00      	cmp	r7, #0
 8000ccc:	d143      	bne.n	8000d56 <_malloc_r+0xd6>
 8000cce:	2c00      	cmp	r4, #0
 8000cd0:	d04b      	beq.n	8000d6a <_malloc_r+0xea>
 8000cd2:	6823      	ldr	r3, [r4, #0]
 8000cd4:	4639      	mov	r1, r7
 8000cd6:	4630      	mov	r0, r6
 8000cd8:	eb04 0903 	add.w	r9, r4, r3
 8000cdc:	f000 fcac 	bl	8001638 <_sbrk_r>
 8000ce0:	4581      	cmp	r9, r0
 8000ce2:	d142      	bne.n	8000d6a <_malloc_r+0xea>
 8000ce4:	6821      	ldr	r1, [r4, #0]
 8000ce6:	1a6d      	subs	r5, r5, r1
 8000ce8:	4629      	mov	r1, r5
 8000cea:	4630      	mov	r0, r6
 8000cec:	f7ff ffa6 	bl	8000c3c <sbrk_aligned>
 8000cf0:	3001      	adds	r0, #1
 8000cf2:	d03a      	beq.n	8000d6a <_malloc_r+0xea>
 8000cf4:	6823      	ldr	r3, [r4, #0]
 8000cf6:	442b      	add	r3, r5
 8000cf8:	6023      	str	r3, [r4, #0]
 8000cfa:	f8d8 3000 	ldr.w	r3, [r8]
 8000cfe:	685a      	ldr	r2, [r3, #4]
 8000d00:	bb62      	cbnz	r2, 8000d5c <_malloc_r+0xdc>
 8000d02:	f8c8 7000 	str.w	r7, [r8]
 8000d06:	e00f      	b.n	8000d28 <_malloc_r+0xa8>
 8000d08:	6822      	ldr	r2, [r4, #0]
 8000d0a:	1b52      	subs	r2, r2, r5
 8000d0c:	d420      	bmi.n	8000d50 <_malloc_r+0xd0>
 8000d0e:	2a0b      	cmp	r2, #11
 8000d10:	d917      	bls.n	8000d42 <_malloc_r+0xc2>
 8000d12:	1961      	adds	r1, r4, r5
 8000d14:	42a3      	cmp	r3, r4
 8000d16:	6025      	str	r5, [r4, #0]
 8000d18:	bf18      	it	ne
 8000d1a:	6059      	strne	r1, [r3, #4]
 8000d1c:	6863      	ldr	r3, [r4, #4]
 8000d1e:	bf08      	it	eq
 8000d20:	f8c8 1000 	streq.w	r1, [r8]
 8000d24:	5162      	str	r2, [r4, r5]
 8000d26:	604b      	str	r3, [r1, #4]
 8000d28:	4630      	mov	r0, r6
 8000d2a:	f000 f82f 	bl	8000d8c <__malloc_unlock>
 8000d2e:	f104 000b 	add.w	r0, r4, #11
 8000d32:	1d23      	adds	r3, r4, #4
 8000d34:	f020 0007 	bic.w	r0, r0, #7
 8000d38:	1ac2      	subs	r2, r0, r3
 8000d3a:	bf1c      	itt	ne
 8000d3c:	1a1b      	subne	r3, r3, r0
 8000d3e:	50a3      	strne	r3, [r4, r2]
 8000d40:	e7af      	b.n	8000ca2 <_malloc_r+0x22>
 8000d42:	6862      	ldr	r2, [r4, #4]
 8000d44:	42a3      	cmp	r3, r4
 8000d46:	bf0c      	ite	eq
 8000d48:	f8c8 2000 	streq.w	r2, [r8]
 8000d4c:	605a      	strne	r2, [r3, #4]
 8000d4e:	e7eb      	b.n	8000d28 <_malloc_r+0xa8>
 8000d50:	4623      	mov	r3, r4
 8000d52:	6864      	ldr	r4, [r4, #4]
 8000d54:	e7ae      	b.n	8000cb4 <_malloc_r+0x34>
 8000d56:	463c      	mov	r4, r7
 8000d58:	687f      	ldr	r7, [r7, #4]
 8000d5a:	e7b6      	b.n	8000cca <_malloc_r+0x4a>
 8000d5c:	461a      	mov	r2, r3
 8000d5e:	685b      	ldr	r3, [r3, #4]
 8000d60:	42a3      	cmp	r3, r4
 8000d62:	d1fb      	bne.n	8000d5c <_malloc_r+0xdc>
 8000d64:	2300      	movs	r3, #0
 8000d66:	6053      	str	r3, [r2, #4]
 8000d68:	e7de      	b.n	8000d28 <_malloc_r+0xa8>
 8000d6a:	230c      	movs	r3, #12
 8000d6c:	6033      	str	r3, [r6, #0]
 8000d6e:	4630      	mov	r0, r6
 8000d70:	f000 f80c 	bl	8000d8c <__malloc_unlock>
 8000d74:	e794      	b.n	8000ca0 <_malloc_r+0x20>
 8000d76:	6005      	str	r5, [r0, #0]
 8000d78:	e7d6      	b.n	8000d28 <_malloc_r+0xa8>
 8000d7a:	bf00      	nop
 8000d7c:	2400020c 	.word	0x2400020c

08000d80 <__malloc_lock>:
 8000d80:	4801      	ldr	r0, [pc, #4]	@ (8000d88 <__malloc_lock+0x8>)
 8000d82:	f7ff bee8 	b.w	8000b56 <__retarget_lock_acquire_recursive>
 8000d86:	bf00      	nop
 8000d88:	24000204 	.word	0x24000204

08000d8c <__malloc_unlock>:
 8000d8c:	4801      	ldr	r0, [pc, #4]	@ (8000d94 <__malloc_unlock+0x8>)
 8000d8e:	f7ff bee3 	b.w	8000b58 <__retarget_lock_release_recursive>
 8000d92:	bf00      	nop
 8000d94:	24000204 	.word	0x24000204

08000d98 <__sfputc_r>:
 8000d98:	6893      	ldr	r3, [r2, #8]
 8000d9a:	3b01      	subs	r3, #1
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	b410      	push	{r4}
 8000da0:	6093      	str	r3, [r2, #8]
 8000da2:	da07      	bge.n	8000db4 <__sfputc_r+0x1c>
 8000da4:	6994      	ldr	r4, [r2, #24]
 8000da6:	42a3      	cmp	r3, r4
 8000da8:	db01      	blt.n	8000dae <__sfputc_r+0x16>
 8000daa:	290a      	cmp	r1, #10
 8000dac:	d102      	bne.n	8000db4 <__sfputc_r+0x1c>
 8000dae:	bc10      	pop	{r4}
 8000db0:	f000 bbae 	b.w	8001510 <__swbuf_r>
 8000db4:	6813      	ldr	r3, [r2, #0]
 8000db6:	1c58      	adds	r0, r3, #1
 8000db8:	6010      	str	r0, [r2, #0]
 8000dba:	7019      	strb	r1, [r3, #0]
 8000dbc:	4608      	mov	r0, r1
 8000dbe:	bc10      	pop	{r4}
 8000dc0:	4770      	bx	lr

08000dc2 <__sfputs_r>:
 8000dc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dc4:	4606      	mov	r6, r0
 8000dc6:	460f      	mov	r7, r1
 8000dc8:	4614      	mov	r4, r2
 8000dca:	18d5      	adds	r5, r2, r3
 8000dcc:	42ac      	cmp	r4, r5
 8000dce:	d101      	bne.n	8000dd4 <__sfputs_r+0x12>
 8000dd0:	2000      	movs	r0, #0
 8000dd2:	e007      	b.n	8000de4 <__sfputs_r+0x22>
 8000dd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dd8:	463a      	mov	r2, r7
 8000dda:	4630      	mov	r0, r6
 8000ddc:	f7ff ffdc 	bl	8000d98 <__sfputc_r>
 8000de0:	1c43      	adds	r3, r0, #1
 8000de2:	d1f3      	bne.n	8000dcc <__sfputs_r+0xa>
 8000de4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000de8 <_vfiprintf_r>:
 8000de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dec:	460d      	mov	r5, r1
 8000dee:	b09d      	sub	sp, #116	@ 0x74
 8000df0:	4614      	mov	r4, r2
 8000df2:	4698      	mov	r8, r3
 8000df4:	4606      	mov	r6, r0
 8000df6:	b118      	cbz	r0, 8000e00 <_vfiprintf_r+0x18>
 8000df8:	6a03      	ldr	r3, [r0, #32]
 8000dfa:	b90b      	cbnz	r3, 8000e00 <_vfiprintf_r+0x18>
 8000dfc:	f7ff fd9e 	bl	800093c <__sinit>
 8000e00:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e02:	07d9      	lsls	r1, r3, #31
 8000e04:	d405      	bmi.n	8000e12 <_vfiprintf_r+0x2a>
 8000e06:	89ab      	ldrh	r3, [r5, #12]
 8000e08:	059a      	lsls	r2, r3, #22
 8000e0a:	d402      	bmi.n	8000e12 <_vfiprintf_r+0x2a>
 8000e0c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e0e:	f7ff fea2 	bl	8000b56 <__retarget_lock_acquire_recursive>
 8000e12:	89ab      	ldrh	r3, [r5, #12]
 8000e14:	071b      	lsls	r3, r3, #28
 8000e16:	d501      	bpl.n	8000e1c <_vfiprintf_r+0x34>
 8000e18:	692b      	ldr	r3, [r5, #16]
 8000e1a:	b99b      	cbnz	r3, 8000e44 <_vfiprintf_r+0x5c>
 8000e1c:	4629      	mov	r1, r5
 8000e1e:	4630      	mov	r0, r6
 8000e20:	f000 fbb4 	bl	800158c <__swsetup_r>
 8000e24:	b170      	cbz	r0, 8000e44 <_vfiprintf_r+0x5c>
 8000e26:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e28:	07dc      	lsls	r4, r3, #31
 8000e2a:	d504      	bpl.n	8000e36 <_vfiprintf_r+0x4e>
 8000e2c:	f04f 30ff 	mov.w	r0, #4294967295
 8000e30:	b01d      	add	sp, #116	@ 0x74
 8000e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e36:	89ab      	ldrh	r3, [r5, #12]
 8000e38:	0598      	lsls	r0, r3, #22
 8000e3a:	d4f7      	bmi.n	8000e2c <_vfiprintf_r+0x44>
 8000e3c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e3e:	f7ff fe8b 	bl	8000b58 <__retarget_lock_release_recursive>
 8000e42:	e7f3      	b.n	8000e2c <_vfiprintf_r+0x44>
 8000e44:	2300      	movs	r3, #0
 8000e46:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e48:	2320      	movs	r3, #32
 8000e4a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000e4e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e52:	2330      	movs	r3, #48	@ 0x30
 8000e54:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8001004 <_vfiprintf_r+0x21c>
 8000e58:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000e5c:	f04f 0901 	mov.w	r9, #1
 8000e60:	4623      	mov	r3, r4
 8000e62:	469a      	mov	sl, r3
 8000e64:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e68:	b10a      	cbz	r2, 8000e6e <_vfiprintf_r+0x86>
 8000e6a:	2a25      	cmp	r2, #37	@ 0x25
 8000e6c:	d1f9      	bne.n	8000e62 <_vfiprintf_r+0x7a>
 8000e6e:	ebba 0b04 	subs.w	fp, sl, r4
 8000e72:	d00b      	beq.n	8000e8c <_vfiprintf_r+0xa4>
 8000e74:	465b      	mov	r3, fp
 8000e76:	4622      	mov	r2, r4
 8000e78:	4629      	mov	r1, r5
 8000e7a:	4630      	mov	r0, r6
 8000e7c:	f7ff ffa1 	bl	8000dc2 <__sfputs_r>
 8000e80:	3001      	adds	r0, #1
 8000e82:	f000 80a7 	beq.w	8000fd4 <_vfiprintf_r+0x1ec>
 8000e86:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000e88:	445a      	add	r2, fp
 8000e8a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000e8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	f000 809f 	beq.w	8000fd4 <_vfiprintf_r+0x1ec>
 8000e96:	2300      	movs	r3, #0
 8000e98:	f04f 32ff 	mov.w	r2, #4294967295
 8000e9c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ea0:	f10a 0a01 	add.w	sl, sl, #1
 8000ea4:	9304      	str	r3, [sp, #16]
 8000ea6:	9307      	str	r3, [sp, #28]
 8000ea8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000eac:	931a      	str	r3, [sp, #104]	@ 0x68
 8000eae:	4654      	mov	r4, sl
 8000eb0:	2205      	movs	r2, #5
 8000eb2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000eb6:	4853      	ldr	r0, [pc, #332]	@ (8001004 <_vfiprintf_r+0x21c>)
 8000eb8:	f7ff fa12 	bl	80002e0 <memchr>
 8000ebc:	9a04      	ldr	r2, [sp, #16]
 8000ebe:	b9d8      	cbnz	r0, 8000ef8 <_vfiprintf_r+0x110>
 8000ec0:	06d1      	lsls	r1, r2, #27
 8000ec2:	bf44      	itt	mi
 8000ec4:	2320      	movmi	r3, #32
 8000ec6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000eca:	0713      	lsls	r3, r2, #28
 8000ecc:	bf44      	itt	mi
 8000ece:	232b      	movmi	r3, #43	@ 0x2b
 8000ed0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ed4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ed8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000eda:	d015      	beq.n	8000f08 <_vfiprintf_r+0x120>
 8000edc:	9a07      	ldr	r2, [sp, #28]
 8000ede:	4654      	mov	r4, sl
 8000ee0:	2000      	movs	r0, #0
 8000ee2:	f04f 0c0a 	mov.w	ip, #10
 8000ee6:	4621      	mov	r1, r4
 8000ee8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000eec:	3b30      	subs	r3, #48	@ 0x30
 8000eee:	2b09      	cmp	r3, #9
 8000ef0:	d94b      	bls.n	8000f8a <_vfiprintf_r+0x1a2>
 8000ef2:	b1b0      	cbz	r0, 8000f22 <_vfiprintf_r+0x13a>
 8000ef4:	9207      	str	r2, [sp, #28]
 8000ef6:	e014      	b.n	8000f22 <_vfiprintf_r+0x13a>
 8000ef8:	eba0 0308 	sub.w	r3, r0, r8
 8000efc:	fa09 f303 	lsl.w	r3, r9, r3
 8000f00:	4313      	orrs	r3, r2
 8000f02:	9304      	str	r3, [sp, #16]
 8000f04:	46a2      	mov	sl, r4
 8000f06:	e7d2      	b.n	8000eae <_vfiprintf_r+0xc6>
 8000f08:	9b03      	ldr	r3, [sp, #12]
 8000f0a:	1d19      	adds	r1, r3, #4
 8000f0c:	681b      	ldr	r3, [r3, #0]
 8000f0e:	9103      	str	r1, [sp, #12]
 8000f10:	2b00      	cmp	r3, #0
 8000f12:	bfbb      	ittet	lt
 8000f14:	425b      	neglt	r3, r3
 8000f16:	f042 0202 	orrlt.w	r2, r2, #2
 8000f1a:	9307      	strge	r3, [sp, #28]
 8000f1c:	9307      	strlt	r3, [sp, #28]
 8000f1e:	bfb8      	it	lt
 8000f20:	9204      	strlt	r2, [sp, #16]
 8000f22:	7823      	ldrb	r3, [r4, #0]
 8000f24:	2b2e      	cmp	r3, #46	@ 0x2e
 8000f26:	d10a      	bne.n	8000f3e <_vfiprintf_r+0x156>
 8000f28:	7863      	ldrb	r3, [r4, #1]
 8000f2a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000f2c:	d132      	bne.n	8000f94 <_vfiprintf_r+0x1ac>
 8000f2e:	9b03      	ldr	r3, [sp, #12]
 8000f30:	1d1a      	adds	r2, r3, #4
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	9203      	str	r2, [sp, #12]
 8000f36:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000f3a:	3402      	adds	r4, #2
 8000f3c:	9305      	str	r3, [sp, #20]
 8000f3e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8001008 <_vfiprintf_r+0x220>
 8000f42:	7821      	ldrb	r1, [r4, #0]
 8000f44:	2203      	movs	r2, #3
 8000f46:	4650      	mov	r0, sl
 8000f48:	f7ff f9ca 	bl	80002e0 <memchr>
 8000f4c:	b138      	cbz	r0, 8000f5e <_vfiprintf_r+0x176>
 8000f4e:	9b04      	ldr	r3, [sp, #16]
 8000f50:	eba0 000a 	sub.w	r0, r0, sl
 8000f54:	2240      	movs	r2, #64	@ 0x40
 8000f56:	4082      	lsls	r2, r0
 8000f58:	4313      	orrs	r3, r2
 8000f5a:	3401      	adds	r4, #1
 8000f5c:	9304      	str	r3, [sp, #16]
 8000f5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f62:	482a      	ldr	r0, [pc, #168]	@ (800100c <_vfiprintf_r+0x224>)
 8000f64:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000f68:	2206      	movs	r2, #6
 8000f6a:	f7ff f9b9 	bl	80002e0 <memchr>
 8000f6e:	2800      	cmp	r0, #0
 8000f70:	d03f      	beq.n	8000ff2 <_vfiprintf_r+0x20a>
 8000f72:	4b27      	ldr	r3, [pc, #156]	@ (8001010 <_vfiprintf_r+0x228>)
 8000f74:	bb1b      	cbnz	r3, 8000fbe <_vfiprintf_r+0x1d6>
 8000f76:	9b03      	ldr	r3, [sp, #12]
 8000f78:	3307      	adds	r3, #7
 8000f7a:	f023 0307 	bic.w	r3, r3, #7
 8000f7e:	3308      	adds	r3, #8
 8000f80:	9303      	str	r3, [sp, #12]
 8000f82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000f84:	443b      	add	r3, r7
 8000f86:	9309      	str	r3, [sp, #36]	@ 0x24
 8000f88:	e76a      	b.n	8000e60 <_vfiprintf_r+0x78>
 8000f8a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000f8e:	460c      	mov	r4, r1
 8000f90:	2001      	movs	r0, #1
 8000f92:	e7a8      	b.n	8000ee6 <_vfiprintf_r+0xfe>
 8000f94:	2300      	movs	r3, #0
 8000f96:	3401      	adds	r4, #1
 8000f98:	9305      	str	r3, [sp, #20]
 8000f9a:	4619      	mov	r1, r3
 8000f9c:	f04f 0c0a 	mov.w	ip, #10
 8000fa0:	4620      	mov	r0, r4
 8000fa2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fa6:	3a30      	subs	r2, #48	@ 0x30
 8000fa8:	2a09      	cmp	r2, #9
 8000faa:	d903      	bls.n	8000fb4 <_vfiprintf_r+0x1cc>
 8000fac:	2b00      	cmp	r3, #0
 8000fae:	d0c6      	beq.n	8000f3e <_vfiprintf_r+0x156>
 8000fb0:	9105      	str	r1, [sp, #20]
 8000fb2:	e7c4      	b.n	8000f3e <_vfiprintf_r+0x156>
 8000fb4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000fb8:	4604      	mov	r4, r0
 8000fba:	2301      	movs	r3, #1
 8000fbc:	e7f0      	b.n	8000fa0 <_vfiprintf_r+0x1b8>
 8000fbe:	ab03      	add	r3, sp, #12
 8000fc0:	9300      	str	r3, [sp, #0]
 8000fc2:	462a      	mov	r2, r5
 8000fc4:	4b13      	ldr	r3, [pc, #76]	@ (8001014 <_vfiprintf_r+0x22c>)
 8000fc6:	a904      	add	r1, sp, #16
 8000fc8:	4630      	mov	r0, r6
 8000fca:	f3af 8000 	nop.w
 8000fce:	4607      	mov	r7, r0
 8000fd0:	1c78      	adds	r0, r7, #1
 8000fd2:	d1d6      	bne.n	8000f82 <_vfiprintf_r+0x19a>
 8000fd4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000fd6:	07d9      	lsls	r1, r3, #31
 8000fd8:	d405      	bmi.n	8000fe6 <_vfiprintf_r+0x1fe>
 8000fda:	89ab      	ldrh	r3, [r5, #12]
 8000fdc:	059a      	lsls	r2, r3, #22
 8000fde:	d402      	bmi.n	8000fe6 <_vfiprintf_r+0x1fe>
 8000fe0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000fe2:	f7ff fdb9 	bl	8000b58 <__retarget_lock_release_recursive>
 8000fe6:	89ab      	ldrh	r3, [r5, #12]
 8000fe8:	065b      	lsls	r3, r3, #25
 8000fea:	f53f af1f 	bmi.w	8000e2c <_vfiprintf_r+0x44>
 8000fee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000ff0:	e71e      	b.n	8000e30 <_vfiprintf_r+0x48>
 8000ff2:	ab03      	add	r3, sp, #12
 8000ff4:	9300      	str	r3, [sp, #0]
 8000ff6:	462a      	mov	r2, r5
 8000ff8:	4b06      	ldr	r3, [pc, #24]	@ (8001014 <_vfiprintf_r+0x22c>)
 8000ffa:	a904      	add	r1, sp, #16
 8000ffc:	4630      	mov	r0, r6
 8000ffe:	f000 f879 	bl	80010f4 <_printf_i>
 8001002:	e7e4      	b.n	8000fce <_vfiprintf_r+0x1e6>
 8001004:	08001916 	.word	0x08001916
 8001008:	0800191c 	.word	0x0800191c
 800100c:	08001920 	.word	0x08001920
 8001010:	00000000 	.word	0x00000000
 8001014:	08000dc3 	.word	0x08000dc3

08001018 <_printf_common>:
 8001018:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800101c:	4616      	mov	r6, r2
 800101e:	4698      	mov	r8, r3
 8001020:	688a      	ldr	r2, [r1, #8]
 8001022:	690b      	ldr	r3, [r1, #16]
 8001024:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001028:	4293      	cmp	r3, r2
 800102a:	bfb8      	it	lt
 800102c:	4613      	movlt	r3, r2
 800102e:	6033      	str	r3, [r6, #0]
 8001030:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001034:	4607      	mov	r7, r0
 8001036:	460c      	mov	r4, r1
 8001038:	b10a      	cbz	r2, 800103e <_printf_common+0x26>
 800103a:	3301      	adds	r3, #1
 800103c:	6033      	str	r3, [r6, #0]
 800103e:	6823      	ldr	r3, [r4, #0]
 8001040:	0699      	lsls	r1, r3, #26
 8001042:	bf42      	ittt	mi
 8001044:	6833      	ldrmi	r3, [r6, #0]
 8001046:	3302      	addmi	r3, #2
 8001048:	6033      	strmi	r3, [r6, #0]
 800104a:	6825      	ldr	r5, [r4, #0]
 800104c:	f015 0506 	ands.w	r5, r5, #6
 8001050:	d106      	bne.n	8001060 <_printf_common+0x48>
 8001052:	f104 0a19 	add.w	sl, r4, #25
 8001056:	68e3      	ldr	r3, [r4, #12]
 8001058:	6832      	ldr	r2, [r6, #0]
 800105a:	1a9b      	subs	r3, r3, r2
 800105c:	42ab      	cmp	r3, r5
 800105e:	dc26      	bgt.n	80010ae <_printf_common+0x96>
 8001060:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001064:	6822      	ldr	r2, [r4, #0]
 8001066:	3b00      	subs	r3, #0
 8001068:	bf18      	it	ne
 800106a:	2301      	movne	r3, #1
 800106c:	0692      	lsls	r2, r2, #26
 800106e:	d42b      	bmi.n	80010c8 <_printf_common+0xb0>
 8001070:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001074:	4641      	mov	r1, r8
 8001076:	4638      	mov	r0, r7
 8001078:	47c8      	blx	r9
 800107a:	3001      	adds	r0, #1
 800107c:	d01e      	beq.n	80010bc <_printf_common+0xa4>
 800107e:	6823      	ldr	r3, [r4, #0]
 8001080:	6922      	ldr	r2, [r4, #16]
 8001082:	f003 0306 	and.w	r3, r3, #6
 8001086:	2b04      	cmp	r3, #4
 8001088:	bf02      	ittt	eq
 800108a:	68e5      	ldreq	r5, [r4, #12]
 800108c:	6833      	ldreq	r3, [r6, #0]
 800108e:	1aed      	subeq	r5, r5, r3
 8001090:	68a3      	ldr	r3, [r4, #8]
 8001092:	bf0c      	ite	eq
 8001094:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001098:	2500      	movne	r5, #0
 800109a:	4293      	cmp	r3, r2
 800109c:	bfc4      	itt	gt
 800109e:	1a9b      	subgt	r3, r3, r2
 80010a0:	18ed      	addgt	r5, r5, r3
 80010a2:	2600      	movs	r6, #0
 80010a4:	341a      	adds	r4, #26
 80010a6:	42b5      	cmp	r5, r6
 80010a8:	d11a      	bne.n	80010e0 <_printf_common+0xc8>
 80010aa:	2000      	movs	r0, #0
 80010ac:	e008      	b.n	80010c0 <_printf_common+0xa8>
 80010ae:	2301      	movs	r3, #1
 80010b0:	4652      	mov	r2, sl
 80010b2:	4641      	mov	r1, r8
 80010b4:	4638      	mov	r0, r7
 80010b6:	47c8      	blx	r9
 80010b8:	3001      	adds	r0, #1
 80010ba:	d103      	bne.n	80010c4 <_printf_common+0xac>
 80010bc:	f04f 30ff 	mov.w	r0, #4294967295
 80010c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010c4:	3501      	adds	r5, #1
 80010c6:	e7c6      	b.n	8001056 <_printf_common+0x3e>
 80010c8:	18e1      	adds	r1, r4, r3
 80010ca:	1c5a      	adds	r2, r3, #1
 80010cc:	2030      	movs	r0, #48	@ 0x30
 80010ce:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80010d2:	4422      	add	r2, r4
 80010d4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80010d8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80010dc:	3302      	adds	r3, #2
 80010de:	e7c7      	b.n	8001070 <_printf_common+0x58>
 80010e0:	2301      	movs	r3, #1
 80010e2:	4622      	mov	r2, r4
 80010e4:	4641      	mov	r1, r8
 80010e6:	4638      	mov	r0, r7
 80010e8:	47c8      	blx	r9
 80010ea:	3001      	adds	r0, #1
 80010ec:	d0e6      	beq.n	80010bc <_printf_common+0xa4>
 80010ee:	3601      	adds	r6, #1
 80010f0:	e7d9      	b.n	80010a6 <_printf_common+0x8e>
	...

080010f4 <_printf_i>:
 80010f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80010f8:	7e0f      	ldrb	r7, [r1, #24]
 80010fa:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80010fc:	2f78      	cmp	r7, #120	@ 0x78
 80010fe:	4691      	mov	r9, r2
 8001100:	4680      	mov	r8, r0
 8001102:	460c      	mov	r4, r1
 8001104:	469a      	mov	sl, r3
 8001106:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800110a:	d807      	bhi.n	800111c <_printf_i+0x28>
 800110c:	2f62      	cmp	r7, #98	@ 0x62
 800110e:	d80a      	bhi.n	8001126 <_printf_i+0x32>
 8001110:	2f00      	cmp	r7, #0
 8001112:	f000 80d2 	beq.w	80012ba <_printf_i+0x1c6>
 8001116:	2f58      	cmp	r7, #88	@ 0x58
 8001118:	f000 80b9 	beq.w	800128e <_printf_i+0x19a>
 800111c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001120:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001124:	e03a      	b.n	800119c <_printf_i+0xa8>
 8001126:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800112a:	2b15      	cmp	r3, #21
 800112c:	d8f6      	bhi.n	800111c <_printf_i+0x28>
 800112e:	a101      	add	r1, pc, #4	@ (adr r1, 8001134 <_printf_i+0x40>)
 8001130:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001134:	0800118d 	.word	0x0800118d
 8001138:	080011a1 	.word	0x080011a1
 800113c:	0800111d 	.word	0x0800111d
 8001140:	0800111d 	.word	0x0800111d
 8001144:	0800111d 	.word	0x0800111d
 8001148:	0800111d 	.word	0x0800111d
 800114c:	080011a1 	.word	0x080011a1
 8001150:	0800111d 	.word	0x0800111d
 8001154:	0800111d 	.word	0x0800111d
 8001158:	0800111d 	.word	0x0800111d
 800115c:	0800111d 	.word	0x0800111d
 8001160:	080012a1 	.word	0x080012a1
 8001164:	080011cb 	.word	0x080011cb
 8001168:	0800125b 	.word	0x0800125b
 800116c:	0800111d 	.word	0x0800111d
 8001170:	0800111d 	.word	0x0800111d
 8001174:	080012c3 	.word	0x080012c3
 8001178:	0800111d 	.word	0x0800111d
 800117c:	080011cb 	.word	0x080011cb
 8001180:	0800111d 	.word	0x0800111d
 8001184:	0800111d 	.word	0x0800111d
 8001188:	08001263 	.word	0x08001263
 800118c:	6833      	ldr	r3, [r6, #0]
 800118e:	1d1a      	adds	r2, r3, #4
 8001190:	681b      	ldr	r3, [r3, #0]
 8001192:	6032      	str	r2, [r6, #0]
 8001194:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001198:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800119c:	2301      	movs	r3, #1
 800119e:	e09d      	b.n	80012dc <_printf_i+0x1e8>
 80011a0:	6833      	ldr	r3, [r6, #0]
 80011a2:	6820      	ldr	r0, [r4, #0]
 80011a4:	1d19      	adds	r1, r3, #4
 80011a6:	6031      	str	r1, [r6, #0]
 80011a8:	0606      	lsls	r6, r0, #24
 80011aa:	d501      	bpl.n	80011b0 <_printf_i+0xbc>
 80011ac:	681d      	ldr	r5, [r3, #0]
 80011ae:	e003      	b.n	80011b8 <_printf_i+0xc4>
 80011b0:	0645      	lsls	r5, r0, #25
 80011b2:	d5fb      	bpl.n	80011ac <_printf_i+0xb8>
 80011b4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80011b8:	2d00      	cmp	r5, #0
 80011ba:	da03      	bge.n	80011c4 <_printf_i+0xd0>
 80011bc:	232d      	movs	r3, #45	@ 0x2d
 80011be:	426d      	negs	r5, r5
 80011c0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011c4:	4859      	ldr	r0, [pc, #356]	@ (800132c <_printf_i+0x238>)
 80011c6:	230a      	movs	r3, #10
 80011c8:	e011      	b.n	80011ee <_printf_i+0xfa>
 80011ca:	6821      	ldr	r1, [r4, #0]
 80011cc:	6833      	ldr	r3, [r6, #0]
 80011ce:	0608      	lsls	r0, r1, #24
 80011d0:	f853 5b04 	ldr.w	r5, [r3], #4
 80011d4:	d402      	bmi.n	80011dc <_printf_i+0xe8>
 80011d6:	0649      	lsls	r1, r1, #25
 80011d8:	bf48      	it	mi
 80011da:	b2ad      	uxthmi	r5, r5
 80011dc:	2f6f      	cmp	r7, #111	@ 0x6f
 80011de:	4853      	ldr	r0, [pc, #332]	@ (800132c <_printf_i+0x238>)
 80011e0:	6033      	str	r3, [r6, #0]
 80011e2:	bf14      	ite	ne
 80011e4:	230a      	movne	r3, #10
 80011e6:	2308      	moveq	r3, #8
 80011e8:	2100      	movs	r1, #0
 80011ea:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80011ee:	6866      	ldr	r6, [r4, #4]
 80011f0:	60a6      	str	r6, [r4, #8]
 80011f2:	2e00      	cmp	r6, #0
 80011f4:	bfa2      	ittt	ge
 80011f6:	6821      	ldrge	r1, [r4, #0]
 80011f8:	f021 0104 	bicge.w	r1, r1, #4
 80011fc:	6021      	strge	r1, [r4, #0]
 80011fe:	b90d      	cbnz	r5, 8001204 <_printf_i+0x110>
 8001200:	2e00      	cmp	r6, #0
 8001202:	d04b      	beq.n	800129c <_printf_i+0x1a8>
 8001204:	4616      	mov	r6, r2
 8001206:	fbb5 f1f3 	udiv	r1, r5, r3
 800120a:	fb03 5711 	mls	r7, r3, r1, r5
 800120e:	5dc7      	ldrb	r7, [r0, r7]
 8001210:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001214:	462f      	mov	r7, r5
 8001216:	42bb      	cmp	r3, r7
 8001218:	460d      	mov	r5, r1
 800121a:	d9f4      	bls.n	8001206 <_printf_i+0x112>
 800121c:	2b08      	cmp	r3, #8
 800121e:	d10b      	bne.n	8001238 <_printf_i+0x144>
 8001220:	6823      	ldr	r3, [r4, #0]
 8001222:	07df      	lsls	r7, r3, #31
 8001224:	d508      	bpl.n	8001238 <_printf_i+0x144>
 8001226:	6923      	ldr	r3, [r4, #16]
 8001228:	6861      	ldr	r1, [r4, #4]
 800122a:	4299      	cmp	r1, r3
 800122c:	bfde      	ittt	le
 800122e:	2330      	movle	r3, #48	@ 0x30
 8001230:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001234:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001238:	1b92      	subs	r2, r2, r6
 800123a:	6122      	str	r2, [r4, #16]
 800123c:	f8cd a000 	str.w	sl, [sp]
 8001240:	464b      	mov	r3, r9
 8001242:	aa03      	add	r2, sp, #12
 8001244:	4621      	mov	r1, r4
 8001246:	4640      	mov	r0, r8
 8001248:	f7ff fee6 	bl	8001018 <_printf_common>
 800124c:	3001      	adds	r0, #1
 800124e:	d14a      	bne.n	80012e6 <_printf_i+0x1f2>
 8001250:	f04f 30ff 	mov.w	r0, #4294967295
 8001254:	b004      	add	sp, #16
 8001256:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800125a:	6823      	ldr	r3, [r4, #0]
 800125c:	f043 0320 	orr.w	r3, r3, #32
 8001260:	6023      	str	r3, [r4, #0]
 8001262:	4833      	ldr	r0, [pc, #204]	@ (8001330 <_printf_i+0x23c>)
 8001264:	2778      	movs	r7, #120	@ 0x78
 8001266:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800126a:	6823      	ldr	r3, [r4, #0]
 800126c:	6831      	ldr	r1, [r6, #0]
 800126e:	061f      	lsls	r7, r3, #24
 8001270:	f851 5b04 	ldr.w	r5, [r1], #4
 8001274:	d402      	bmi.n	800127c <_printf_i+0x188>
 8001276:	065f      	lsls	r7, r3, #25
 8001278:	bf48      	it	mi
 800127a:	b2ad      	uxthmi	r5, r5
 800127c:	6031      	str	r1, [r6, #0]
 800127e:	07d9      	lsls	r1, r3, #31
 8001280:	bf44      	itt	mi
 8001282:	f043 0320 	orrmi.w	r3, r3, #32
 8001286:	6023      	strmi	r3, [r4, #0]
 8001288:	b11d      	cbz	r5, 8001292 <_printf_i+0x19e>
 800128a:	2310      	movs	r3, #16
 800128c:	e7ac      	b.n	80011e8 <_printf_i+0xf4>
 800128e:	4827      	ldr	r0, [pc, #156]	@ (800132c <_printf_i+0x238>)
 8001290:	e7e9      	b.n	8001266 <_printf_i+0x172>
 8001292:	6823      	ldr	r3, [r4, #0]
 8001294:	f023 0320 	bic.w	r3, r3, #32
 8001298:	6023      	str	r3, [r4, #0]
 800129a:	e7f6      	b.n	800128a <_printf_i+0x196>
 800129c:	4616      	mov	r6, r2
 800129e:	e7bd      	b.n	800121c <_printf_i+0x128>
 80012a0:	6833      	ldr	r3, [r6, #0]
 80012a2:	6825      	ldr	r5, [r4, #0]
 80012a4:	6961      	ldr	r1, [r4, #20]
 80012a6:	1d18      	adds	r0, r3, #4
 80012a8:	6030      	str	r0, [r6, #0]
 80012aa:	062e      	lsls	r6, r5, #24
 80012ac:	681b      	ldr	r3, [r3, #0]
 80012ae:	d501      	bpl.n	80012b4 <_printf_i+0x1c0>
 80012b0:	6019      	str	r1, [r3, #0]
 80012b2:	e002      	b.n	80012ba <_printf_i+0x1c6>
 80012b4:	0668      	lsls	r0, r5, #25
 80012b6:	d5fb      	bpl.n	80012b0 <_printf_i+0x1bc>
 80012b8:	8019      	strh	r1, [r3, #0]
 80012ba:	2300      	movs	r3, #0
 80012bc:	6123      	str	r3, [r4, #16]
 80012be:	4616      	mov	r6, r2
 80012c0:	e7bc      	b.n	800123c <_printf_i+0x148>
 80012c2:	6833      	ldr	r3, [r6, #0]
 80012c4:	1d1a      	adds	r2, r3, #4
 80012c6:	6032      	str	r2, [r6, #0]
 80012c8:	681e      	ldr	r6, [r3, #0]
 80012ca:	6862      	ldr	r2, [r4, #4]
 80012cc:	2100      	movs	r1, #0
 80012ce:	4630      	mov	r0, r6
 80012d0:	f7ff f806 	bl	80002e0 <memchr>
 80012d4:	b108      	cbz	r0, 80012da <_printf_i+0x1e6>
 80012d6:	1b80      	subs	r0, r0, r6
 80012d8:	6060      	str	r0, [r4, #4]
 80012da:	6863      	ldr	r3, [r4, #4]
 80012dc:	6123      	str	r3, [r4, #16]
 80012de:	2300      	movs	r3, #0
 80012e0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80012e4:	e7aa      	b.n	800123c <_printf_i+0x148>
 80012e6:	6923      	ldr	r3, [r4, #16]
 80012e8:	4632      	mov	r2, r6
 80012ea:	4649      	mov	r1, r9
 80012ec:	4640      	mov	r0, r8
 80012ee:	47d0      	blx	sl
 80012f0:	3001      	adds	r0, #1
 80012f2:	d0ad      	beq.n	8001250 <_printf_i+0x15c>
 80012f4:	6823      	ldr	r3, [r4, #0]
 80012f6:	079b      	lsls	r3, r3, #30
 80012f8:	d413      	bmi.n	8001322 <_printf_i+0x22e>
 80012fa:	68e0      	ldr	r0, [r4, #12]
 80012fc:	9b03      	ldr	r3, [sp, #12]
 80012fe:	4298      	cmp	r0, r3
 8001300:	bfb8      	it	lt
 8001302:	4618      	movlt	r0, r3
 8001304:	e7a6      	b.n	8001254 <_printf_i+0x160>
 8001306:	2301      	movs	r3, #1
 8001308:	4632      	mov	r2, r6
 800130a:	4649      	mov	r1, r9
 800130c:	4640      	mov	r0, r8
 800130e:	47d0      	blx	sl
 8001310:	3001      	adds	r0, #1
 8001312:	d09d      	beq.n	8001250 <_printf_i+0x15c>
 8001314:	3501      	adds	r5, #1
 8001316:	68e3      	ldr	r3, [r4, #12]
 8001318:	9903      	ldr	r1, [sp, #12]
 800131a:	1a5b      	subs	r3, r3, r1
 800131c:	42ab      	cmp	r3, r5
 800131e:	dcf2      	bgt.n	8001306 <_printf_i+0x212>
 8001320:	e7eb      	b.n	80012fa <_printf_i+0x206>
 8001322:	2500      	movs	r5, #0
 8001324:	f104 0619 	add.w	r6, r4, #25
 8001328:	e7f5      	b.n	8001316 <_printf_i+0x222>
 800132a:	bf00      	nop
 800132c:	08001927 	.word	0x08001927
 8001330:	08001938 	.word	0x08001938

08001334 <__sflush_r>:
 8001334:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800133a:	0716      	lsls	r6, r2, #28
 800133c:	4605      	mov	r5, r0
 800133e:	460c      	mov	r4, r1
 8001340:	d454      	bmi.n	80013ec <__sflush_r+0xb8>
 8001342:	684b      	ldr	r3, [r1, #4]
 8001344:	2b00      	cmp	r3, #0
 8001346:	dc02      	bgt.n	800134e <__sflush_r+0x1a>
 8001348:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800134a:	2b00      	cmp	r3, #0
 800134c:	dd48      	ble.n	80013e0 <__sflush_r+0xac>
 800134e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001350:	2e00      	cmp	r6, #0
 8001352:	d045      	beq.n	80013e0 <__sflush_r+0xac>
 8001354:	2300      	movs	r3, #0
 8001356:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800135a:	682f      	ldr	r7, [r5, #0]
 800135c:	6a21      	ldr	r1, [r4, #32]
 800135e:	602b      	str	r3, [r5, #0]
 8001360:	d030      	beq.n	80013c4 <__sflush_r+0x90>
 8001362:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001364:	89a3      	ldrh	r3, [r4, #12]
 8001366:	0759      	lsls	r1, r3, #29
 8001368:	d505      	bpl.n	8001376 <__sflush_r+0x42>
 800136a:	6863      	ldr	r3, [r4, #4]
 800136c:	1ad2      	subs	r2, r2, r3
 800136e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001370:	b10b      	cbz	r3, 8001376 <__sflush_r+0x42>
 8001372:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001374:	1ad2      	subs	r2, r2, r3
 8001376:	2300      	movs	r3, #0
 8001378:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800137a:	6a21      	ldr	r1, [r4, #32]
 800137c:	4628      	mov	r0, r5
 800137e:	47b0      	blx	r6
 8001380:	1c43      	adds	r3, r0, #1
 8001382:	89a3      	ldrh	r3, [r4, #12]
 8001384:	d106      	bne.n	8001394 <__sflush_r+0x60>
 8001386:	6829      	ldr	r1, [r5, #0]
 8001388:	291d      	cmp	r1, #29
 800138a:	d82b      	bhi.n	80013e4 <__sflush_r+0xb0>
 800138c:	4a28      	ldr	r2, [pc, #160]	@ (8001430 <__sflush_r+0xfc>)
 800138e:	410a      	asrs	r2, r1
 8001390:	07d6      	lsls	r6, r2, #31
 8001392:	d427      	bmi.n	80013e4 <__sflush_r+0xb0>
 8001394:	2200      	movs	r2, #0
 8001396:	6062      	str	r2, [r4, #4]
 8001398:	04d9      	lsls	r1, r3, #19
 800139a:	6922      	ldr	r2, [r4, #16]
 800139c:	6022      	str	r2, [r4, #0]
 800139e:	d504      	bpl.n	80013aa <__sflush_r+0x76>
 80013a0:	1c42      	adds	r2, r0, #1
 80013a2:	d101      	bne.n	80013a8 <__sflush_r+0x74>
 80013a4:	682b      	ldr	r3, [r5, #0]
 80013a6:	b903      	cbnz	r3, 80013aa <__sflush_r+0x76>
 80013a8:	6560      	str	r0, [r4, #84]	@ 0x54
 80013aa:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80013ac:	602f      	str	r7, [r5, #0]
 80013ae:	b1b9      	cbz	r1, 80013e0 <__sflush_r+0xac>
 80013b0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80013b4:	4299      	cmp	r1, r3
 80013b6:	d002      	beq.n	80013be <__sflush_r+0x8a>
 80013b8:	4628      	mov	r0, r5
 80013ba:	f7ff fbed 	bl	8000b98 <_free_r>
 80013be:	2300      	movs	r3, #0
 80013c0:	6363      	str	r3, [r4, #52]	@ 0x34
 80013c2:	e00d      	b.n	80013e0 <__sflush_r+0xac>
 80013c4:	2301      	movs	r3, #1
 80013c6:	4628      	mov	r0, r5
 80013c8:	47b0      	blx	r6
 80013ca:	4602      	mov	r2, r0
 80013cc:	1c50      	adds	r0, r2, #1
 80013ce:	d1c9      	bne.n	8001364 <__sflush_r+0x30>
 80013d0:	682b      	ldr	r3, [r5, #0]
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d0c6      	beq.n	8001364 <__sflush_r+0x30>
 80013d6:	2b1d      	cmp	r3, #29
 80013d8:	d001      	beq.n	80013de <__sflush_r+0xaa>
 80013da:	2b16      	cmp	r3, #22
 80013dc:	d11d      	bne.n	800141a <__sflush_r+0xe6>
 80013de:	602f      	str	r7, [r5, #0]
 80013e0:	2000      	movs	r0, #0
 80013e2:	e021      	b.n	8001428 <__sflush_r+0xf4>
 80013e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80013e8:	b21b      	sxth	r3, r3
 80013ea:	e01a      	b.n	8001422 <__sflush_r+0xee>
 80013ec:	690f      	ldr	r7, [r1, #16]
 80013ee:	2f00      	cmp	r7, #0
 80013f0:	d0f6      	beq.n	80013e0 <__sflush_r+0xac>
 80013f2:	0793      	lsls	r3, r2, #30
 80013f4:	680e      	ldr	r6, [r1, #0]
 80013f6:	bf08      	it	eq
 80013f8:	694b      	ldreq	r3, [r1, #20]
 80013fa:	600f      	str	r7, [r1, #0]
 80013fc:	bf18      	it	ne
 80013fe:	2300      	movne	r3, #0
 8001400:	1bf6      	subs	r6, r6, r7
 8001402:	608b      	str	r3, [r1, #8]
 8001404:	2e00      	cmp	r6, #0
 8001406:	ddeb      	ble.n	80013e0 <__sflush_r+0xac>
 8001408:	6a21      	ldr	r1, [r4, #32]
 800140a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800140e:	4633      	mov	r3, r6
 8001410:	463a      	mov	r2, r7
 8001412:	4628      	mov	r0, r5
 8001414:	47e0      	blx	ip
 8001416:	2800      	cmp	r0, #0
 8001418:	dc07      	bgt.n	800142a <__sflush_r+0xf6>
 800141a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800141e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001422:	81a3      	strh	r3, [r4, #12]
 8001424:	f04f 30ff 	mov.w	r0, #4294967295
 8001428:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800142a:	4407      	add	r7, r0
 800142c:	1a36      	subs	r6, r6, r0
 800142e:	e7e9      	b.n	8001404 <__sflush_r+0xd0>
 8001430:	dfbffffe 	.word	0xdfbffffe

08001434 <_fflush_r>:
 8001434:	b538      	push	{r3, r4, r5, lr}
 8001436:	690b      	ldr	r3, [r1, #16]
 8001438:	4605      	mov	r5, r0
 800143a:	460c      	mov	r4, r1
 800143c:	b913      	cbnz	r3, 8001444 <_fflush_r+0x10>
 800143e:	2500      	movs	r5, #0
 8001440:	4628      	mov	r0, r5
 8001442:	bd38      	pop	{r3, r4, r5, pc}
 8001444:	b118      	cbz	r0, 800144e <_fflush_r+0x1a>
 8001446:	6a03      	ldr	r3, [r0, #32]
 8001448:	b90b      	cbnz	r3, 800144e <_fflush_r+0x1a>
 800144a:	f7ff fa77 	bl	800093c <__sinit>
 800144e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001452:	2b00      	cmp	r3, #0
 8001454:	d0f3      	beq.n	800143e <_fflush_r+0xa>
 8001456:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001458:	07d0      	lsls	r0, r2, #31
 800145a:	d404      	bmi.n	8001466 <_fflush_r+0x32>
 800145c:	0599      	lsls	r1, r3, #22
 800145e:	d402      	bmi.n	8001466 <_fflush_r+0x32>
 8001460:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001462:	f7ff fb78 	bl	8000b56 <__retarget_lock_acquire_recursive>
 8001466:	4628      	mov	r0, r5
 8001468:	4621      	mov	r1, r4
 800146a:	f7ff ff63 	bl	8001334 <__sflush_r>
 800146e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001470:	07da      	lsls	r2, r3, #31
 8001472:	4605      	mov	r5, r0
 8001474:	d4e4      	bmi.n	8001440 <_fflush_r+0xc>
 8001476:	89a3      	ldrh	r3, [r4, #12]
 8001478:	059b      	lsls	r3, r3, #22
 800147a:	d4e1      	bmi.n	8001440 <_fflush_r+0xc>
 800147c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800147e:	f7ff fb6b 	bl	8000b58 <__retarget_lock_release_recursive>
 8001482:	e7dd      	b.n	8001440 <_fflush_r+0xc>

08001484 <fiprintf>:
 8001484:	b40e      	push	{r1, r2, r3}
 8001486:	b503      	push	{r0, r1, lr}
 8001488:	4601      	mov	r1, r0
 800148a:	ab03      	add	r3, sp, #12
 800148c:	4805      	ldr	r0, [pc, #20]	@ (80014a4 <fiprintf+0x20>)
 800148e:	f853 2b04 	ldr.w	r2, [r3], #4
 8001492:	6800      	ldr	r0, [r0, #0]
 8001494:	9301      	str	r3, [sp, #4]
 8001496:	f7ff fca7 	bl	8000de8 <_vfiprintf_r>
 800149a:	b002      	add	sp, #8
 800149c:	f85d eb04 	ldr.w	lr, [sp], #4
 80014a0:	b003      	add	sp, #12
 80014a2:	4770      	bx	lr
 80014a4:	24000054 	.word	0x24000054

080014a8 <_putc_r>:
 80014a8:	b570      	push	{r4, r5, r6, lr}
 80014aa:	460d      	mov	r5, r1
 80014ac:	4614      	mov	r4, r2
 80014ae:	4606      	mov	r6, r0
 80014b0:	b118      	cbz	r0, 80014ba <_putc_r+0x12>
 80014b2:	6a03      	ldr	r3, [r0, #32]
 80014b4:	b90b      	cbnz	r3, 80014ba <_putc_r+0x12>
 80014b6:	f7ff fa41 	bl	800093c <__sinit>
 80014ba:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80014bc:	07d8      	lsls	r0, r3, #31
 80014be:	d405      	bmi.n	80014cc <_putc_r+0x24>
 80014c0:	89a3      	ldrh	r3, [r4, #12]
 80014c2:	0599      	lsls	r1, r3, #22
 80014c4:	d402      	bmi.n	80014cc <_putc_r+0x24>
 80014c6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80014c8:	f7ff fb45 	bl	8000b56 <__retarget_lock_acquire_recursive>
 80014cc:	68a3      	ldr	r3, [r4, #8]
 80014ce:	3b01      	subs	r3, #1
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	60a3      	str	r3, [r4, #8]
 80014d4:	da05      	bge.n	80014e2 <_putc_r+0x3a>
 80014d6:	69a2      	ldr	r2, [r4, #24]
 80014d8:	4293      	cmp	r3, r2
 80014da:	db12      	blt.n	8001502 <_putc_r+0x5a>
 80014dc:	b2eb      	uxtb	r3, r5
 80014de:	2b0a      	cmp	r3, #10
 80014e0:	d00f      	beq.n	8001502 <_putc_r+0x5a>
 80014e2:	6823      	ldr	r3, [r4, #0]
 80014e4:	1c5a      	adds	r2, r3, #1
 80014e6:	6022      	str	r2, [r4, #0]
 80014e8:	701d      	strb	r5, [r3, #0]
 80014ea:	b2ed      	uxtb	r5, r5
 80014ec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80014ee:	07da      	lsls	r2, r3, #31
 80014f0:	d405      	bmi.n	80014fe <_putc_r+0x56>
 80014f2:	89a3      	ldrh	r3, [r4, #12]
 80014f4:	059b      	lsls	r3, r3, #22
 80014f6:	d402      	bmi.n	80014fe <_putc_r+0x56>
 80014f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80014fa:	f7ff fb2d 	bl	8000b58 <__retarget_lock_release_recursive>
 80014fe:	4628      	mov	r0, r5
 8001500:	bd70      	pop	{r4, r5, r6, pc}
 8001502:	4629      	mov	r1, r5
 8001504:	4622      	mov	r2, r4
 8001506:	4630      	mov	r0, r6
 8001508:	f000 f802 	bl	8001510 <__swbuf_r>
 800150c:	4605      	mov	r5, r0
 800150e:	e7ed      	b.n	80014ec <_putc_r+0x44>

08001510 <__swbuf_r>:
 8001510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001512:	460e      	mov	r6, r1
 8001514:	4614      	mov	r4, r2
 8001516:	4605      	mov	r5, r0
 8001518:	b118      	cbz	r0, 8001522 <__swbuf_r+0x12>
 800151a:	6a03      	ldr	r3, [r0, #32]
 800151c:	b90b      	cbnz	r3, 8001522 <__swbuf_r+0x12>
 800151e:	f7ff fa0d 	bl	800093c <__sinit>
 8001522:	69a3      	ldr	r3, [r4, #24]
 8001524:	60a3      	str	r3, [r4, #8]
 8001526:	89a3      	ldrh	r3, [r4, #12]
 8001528:	071a      	lsls	r2, r3, #28
 800152a:	d501      	bpl.n	8001530 <__swbuf_r+0x20>
 800152c:	6923      	ldr	r3, [r4, #16]
 800152e:	b943      	cbnz	r3, 8001542 <__swbuf_r+0x32>
 8001530:	4621      	mov	r1, r4
 8001532:	4628      	mov	r0, r5
 8001534:	f000 f82a 	bl	800158c <__swsetup_r>
 8001538:	b118      	cbz	r0, 8001542 <__swbuf_r+0x32>
 800153a:	f04f 37ff 	mov.w	r7, #4294967295
 800153e:	4638      	mov	r0, r7
 8001540:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001542:	6823      	ldr	r3, [r4, #0]
 8001544:	6922      	ldr	r2, [r4, #16]
 8001546:	1a98      	subs	r0, r3, r2
 8001548:	6963      	ldr	r3, [r4, #20]
 800154a:	b2f6      	uxtb	r6, r6
 800154c:	4283      	cmp	r3, r0
 800154e:	4637      	mov	r7, r6
 8001550:	dc05      	bgt.n	800155e <__swbuf_r+0x4e>
 8001552:	4621      	mov	r1, r4
 8001554:	4628      	mov	r0, r5
 8001556:	f7ff ff6d 	bl	8001434 <_fflush_r>
 800155a:	2800      	cmp	r0, #0
 800155c:	d1ed      	bne.n	800153a <__swbuf_r+0x2a>
 800155e:	68a3      	ldr	r3, [r4, #8]
 8001560:	3b01      	subs	r3, #1
 8001562:	60a3      	str	r3, [r4, #8]
 8001564:	6823      	ldr	r3, [r4, #0]
 8001566:	1c5a      	adds	r2, r3, #1
 8001568:	6022      	str	r2, [r4, #0]
 800156a:	701e      	strb	r6, [r3, #0]
 800156c:	6962      	ldr	r2, [r4, #20]
 800156e:	1c43      	adds	r3, r0, #1
 8001570:	429a      	cmp	r2, r3
 8001572:	d004      	beq.n	800157e <__swbuf_r+0x6e>
 8001574:	89a3      	ldrh	r3, [r4, #12]
 8001576:	07db      	lsls	r3, r3, #31
 8001578:	d5e1      	bpl.n	800153e <__swbuf_r+0x2e>
 800157a:	2e0a      	cmp	r6, #10
 800157c:	d1df      	bne.n	800153e <__swbuf_r+0x2e>
 800157e:	4621      	mov	r1, r4
 8001580:	4628      	mov	r0, r5
 8001582:	f7ff ff57 	bl	8001434 <_fflush_r>
 8001586:	2800      	cmp	r0, #0
 8001588:	d0d9      	beq.n	800153e <__swbuf_r+0x2e>
 800158a:	e7d6      	b.n	800153a <__swbuf_r+0x2a>

0800158c <__swsetup_r>:
 800158c:	b538      	push	{r3, r4, r5, lr}
 800158e:	4b29      	ldr	r3, [pc, #164]	@ (8001634 <__swsetup_r+0xa8>)
 8001590:	4605      	mov	r5, r0
 8001592:	6818      	ldr	r0, [r3, #0]
 8001594:	460c      	mov	r4, r1
 8001596:	b118      	cbz	r0, 80015a0 <__swsetup_r+0x14>
 8001598:	6a03      	ldr	r3, [r0, #32]
 800159a:	b90b      	cbnz	r3, 80015a0 <__swsetup_r+0x14>
 800159c:	f7ff f9ce 	bl	800093c <__sinit>
 80015a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80015a4:	0719      	lsls	r1, r3, #28
 80015a6:	d422      	bmi.n	80015ee <__swsetup_r+0x62>
 80015a8:	06da      	lsls	r2, r3, #27
 80015aa:	d407      	bmi.n	80015bc <__swsetup_r+0x30>
 80015ac:	2209      	movs	r2, #9
 80015ae:	602a      	str	r2, [r5, #0]
 80015b0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80015b4:	81a3      	strh	r3, [r4, #12]
 80015b6:	f04f 30ff 	mov.w	r0, #4294967295
 80015ba:	e033      	b.n	8001624 <__swsetup_r+0x98>
 80015bc:	0758      	lsls	r0, r3, #29
 80015be:	d512      	bpl.n	80015e6 <__swsetup_r+0x5a>
 80015c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80015c2:	b141      	cbz	r1, 80015d6 <__swsetup_r+0x4a>
 80015c4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80015c8:	4299      	cmp	r1, r3
 80015ca:	d002      	beq.n	80015d2 <__swsetup_r+0x46>
 80015cc:	4628      	mov	r0, r5
 80015ce:	f7ff fae3 	bl	8000b98 <_free_r>
 80015d2:	2300      	movs	r3, #0
 80015d4:	6363      	str	r3, [r4, #52]	@ 0x34
 80015d6:	89a3      	ldrh	r3, [r4, #12]
 80015d8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80015dc:	81a3      	strh	r3, [r4, #12]
 80015de:	2300      	movs	r3, #0
 80015e0:	6063      	str	r3, [r4, #4]
 80015e2:	6923      	ldr	r3, [r4, #16]
 80015e4:	6023      	str	r3, [r4, #0]
 80015e6:	89a3      	ldrh	r3, [r4, #12]
 80015e8:	f043 0308 	orr.w	r3, r3, #8
 80015ec:	81a3      	strh	r3, [r4, #12]
 80015ee:	6923      	ldr	r3, [r4, #16]
 80015f0:	b94b      	cbnz	r3, 8001606 <__swsetup_r+0x7a>
 80015f2:	89a3      	ldrh	r3, [r4, #12]
 80015f4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80015f8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80015fc:	d003      	beq.n	8001606 <__swsetup_r+0x7a>
 80015fe:	4621      	mov	r1, r4
 8001600:	4628      	mov	r0, r5
 8001602:	f000 f856 	bl	80016b2 <__smakebuf_r>
 8001606:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800160a:	f013 0201 	ands.w	r2, r3, #1
 800160e:	d00a      	beq.n	8001626 <__swsetup_r+0x9a>
 8001610:	2200      	movs	r2, #0
 8001612:	60a2      	str	r2, [r4, #8]
 8001614:	6962      	ldr	r2, [r4, #20]
 8001616:	4252      	negs	r2, r2
 8001618:	61a2      	str	r2, [r4, #24]
 800161a:	6922      	ldr	r2, [r4, #16]
 800161c:	b942      	cbnz	r2, 8001630 <__swsetup_r+0xa4>
 800161e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001622:	d1c5      	bne.n	80015b0 <__swsetup_r+0x24>
 8001624:	bd38      	pop	{r3, r4, r5, pc}
 8001626:	0799      	lsls	r1, r3, #30
 8001628:	bf58      	it	pl
 800162a:	6962      	ldrpl	r2, [r4, #20]
 800162c:	60a2      	str	r2, [r4, #8]
 800162e:	e7f4      	b.n	800161a <__swsetup_r+0x8e>
 8001630:	2000      	movs	r0, #0
 8001632:	e7f7      	b.n	8001624 <__swsetup_r+0x98>
 8001634:	24000054 	.word	0x24000054

08001638 <_sbrk_r>:
 8001638:	b538      	push	{r3, r4, r5, lr}
 800163a:	4d06      	ldr	r5, [pc, #24]	@ (8001654 <_sbrk_r+0x1c>)
 800163c:	2300      	movs	r3, #0
 800163e:	4604      	mov	r4, r0
 8001640:	4608      	mov	r0, r1
 8001642:	602b      	str	r3, [r5, #0]
 8001644:	f7ff f850 	bl	80006e8 <_sbrk>
 8001648:	1c43      	adds	r3, r0, #1
 800164a:	d102      	bne.n	8001652 <_sbrk_r+0x1a>
 800164c:	682b      	ldr	r3, [r5, #0]
 800164e:	b103      	cbz	r3, 8001652 <_sbrk_r+0x1a>
 8001650:	6023      	str	r3, [r4, #0]
 8001652:	bd38      	pop	{r3, r4, r5, pc}
 8001654:	24000200 	.word	0x24000200

08001658 <abort>:
 8001658:	b508      	push	{r3, lr}
 800165a:	2006      	movs	r0, #6
 800165c:	f000 f88e 	bl	800177c <raise>
 8001660:	2001      	movs	r0, #1
 8001662:	f7fe ffcc 	bl	80005fe <_exit>

08001666 <__swhatbuf_r>:
 8001666:	b570      	push	{r4, r5, r6, lr}
 8001668:	460c      	mov	r4, r1
 800166a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800166e:	2900      	cmp	r1, #0
 8001670:	b096      	sub	sp, #88	@ 0x58
 8001672:	4615      	mov	r5, r2
 8001674:	461e      	mov	r6, r3
 8001676:	da0d      	bge.n	8001694 <__swhatbuf_r+0x2e>
 8001678:	89a3      	ldrh	r3, [r4, #12]
 800167a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800167e:	f04f 0100 	mov.w	r1, #0
 8001682:	bf14      	ite	ne
 8001684:	2340      	movne	r3, #64	@ 0x40
 8001686:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800168a:	2000      	movs	r0, #0
 800168c:	6031      	str	r1, [r6, #0]
 800168e:	602b      	str	r3, [r5, #0]
 8001690:	b016      	add	sp, #88	@ 0x58
 8001692:	bd70      	pop	{r4, r5, r6, pc}
 8001694:	466a      	mov	r2, sp
 8001696:	f000 f879 	bl	800178c <_fstat_r>
 800169a:	2800      	cmp	r0, #0
 800169c:	dbec      	blt.n	8001678 <__swhatbuf_r+0x12>
 800169e:	9901      	ldr	r1, [sp, #4]
 80016a0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80016a4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80016a8:	4259      	negs	r1, r3
 80016aa:	4159      	adcs	r1, r3
 80016ac:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80016b0:	e7eb      	b.n	800168a <__swhatbuf_r+0x24>

080016b2 <__smakebuf_r>:
 80016b2:	898b      	ldrh	r3, [r1, #12]
 80016b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80016b6:	079d      	lsls	r5, r3, #30
 80016b8:	4606      	mov	r6, r0
 80016ba:	460c      	mov	r4, r1
 80016bc:	d507      	bpl.n	80016ce <__smakebuf_r+0x1c>
 80016be:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80016c2:	6023      	str	r3, [r4, #0]
 80016c4:	6123      	str	r3, [r4, #16]
 80016c6:	2301      	movs	r3, #1
 80016c8:	6163      	str	r3, [r4, #20]
 80016ca:	b003      	add	sp, #12
 80016cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016ce:	ab01      	add	r3, sp, #4
 80016d0:	466a      	mov	r2, sp
 80016d2:	f7ff ffc8 	bl	8001666 <__swhatbuf_r>
 80016d6:	9f00      	ldr	r7, [sp, #0]
 80016d8:	4605      	mov	r5, r0
 80016da:	4639      	mov	r1, r7
 80016dc:	4630      	mov	r0, r6
 80016de:	f7ff facf 	bl	8000c80 <_malloc_r>
 80016e2:	b948      	cbnz	r0, 80016f8 <__smakebuf_r+0x46>
 80016e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80016e8:	059a      	lsls	r2, r3, #22
 80016ea:	d4ee      	bmi.n	80016ca <__smakebuf_r+0x18>
 80016ec:	f023 0303 	bic.w	r3, r3, #3
 80016f0:	f043 0302 	orr.w	r3, r3, #2
 80016f4:	81a3      	strh	r3, [r4, #12]
 80016f6:	e7e2      	b.n	80016be <__smakebuf_r+0xc>
 80016f8:	89a3      	ldrh	r3, [r4, #12]
 80016fa:	6020      	str	r0, [r4, #0]
 80016fc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001700:	81a3      	strh	r3, [r4, #12]
 8001702:	9b01      	ldr	r3, [sp, #4]
 8001704:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001708:	b15b      	cbz	r3, 8001722 <__smakebuf_r+0x70>
 800170a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800170e:	4630      	mov	r0, r6
 8001710:	f000 f84e 	bl	80017b0 <_isatty_r>
 8001714:	b128      	cbz	r0, 8001722 <__smakebuf_r+0x70>
 8001716:	89a3      	ldrh	r3, [r4, #12]
 8001718:	f023 0303 	bic.w	r3, r3, #3
 800171c:	f043 0301 	orr.w	r3, r3, #1
 8001720:	81a3      	strh	r3, [r4, #12]
 8001722:	89a3      	ldrh	r3, [r4, #12]
 8001724:	431d      	orrs	r5, r3
 8001726:	81a5      	strh	r5, [r4, #12]
 8001728:	e7cf      	b.n	80016ca <__smakebuf_r+0x18>

0800172a <_raise_r>:
 800172a:	291f      	cmp	r1, #31
 800172c:	b538      	push	{r3, r4, r5, lr}
 800172e:	4605      	mov	r5, r0
 8001730:	460c      	mov	r4, r1
 8001732:	d904      	bls.n	800173e <_raise_r+0x14>
 8001734:	2316      	movs	r3, #22
 8001736:	6003      	str	r3, [r0, #0]
 8001738:	f04f 30ff 	mov.w	r0, #4294967295
 800173c:	bd38      	pop	{r3, r4, r5, pc}
 800173e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8001740:	b112      	cbz	r2, 8001748 <_raise_r+0x1e>
 8001742:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001746:	b94b      	cbnz	r3, 800175c <_raise_r+0x32>
 8001748:	4628      	mov	r0, r5
 800174a:	f000 f853 	bl	80017f4 <_getpid_r>
 800174e:	4622      	mov	r2, r4
 8001750:	4601      	mov	r1, r0
 8001752:	4628      	mov	r0, r5
 8001754:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001758:	f000 b83a 	b.w	80017d0 <_kill_r>
 800175c:	2b01      	cmp	r3, #1
 800175e:	d00a      	beq.n	8001776 <_raise_r+0x4c>
 8001760:	1c59      	adds	r1, r3, #1
 8001762:	d103      	bne.n	800176c <_raise_r+0x42>
 8001764:	2316      	movs	r3, #22
 8001766:	6003      	str	r3, [r0, #0]
 8001768:	2001      	movs	r0, #1
 800176a:	e7e7      	b.n	800173c <_raise_r+0x12>
 800176c:	2100      	movs	r1, #0
 800176e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8001772:	4620      	mov	r0, r4
 8001774:	4798      	blx	r3
 8001776:	2000      	movs	r0, #0
 8001778:	e7e0      	b.n	800173c <_raise_r+0x12>
	...

0800177c <raise>:
 800177c:	4b02      	ldr	r3, [pc, #8]	@ (8001788 <raise+0xc>)
 800177e:	4601      	mov	r1, r0
 8001780:	6818      	ldr	r0, [r3, #0]
 8001782:	f7ff bfd2 	b.w	800172a <_raise_r>
 8001786:	bf00      	nop
 8001788:	24000054 	.word	0x24000054

0800178c <_fstat_r>:
 800178c:	b538      	push	{r3, r4, r5, lr}
 800178e:	4d07      	ldr	r5, [pc, #28]	@ (80017ac <_fstat_r+0x20>)
 8001790:	2300      	movs	r3, #0
 8001792:	4604      	mov	r4, r0
 8001794:	4608      	mov	r0, r1
 8001796:	4611      	mov	r1, r2
 8001798:	602b      	str	r3, [r5, #0]
 800179a:	f7fe ff7f 	bl	800069c <_fstat>
 800179e:	1c43      	adds	r3, r0, #1
 80017a0:	d102      	bne.n	80017a8 <_fstat_r+0x1c>
 80017a2:	682b      	ldr	r3, [r5, #0]
 80017a4:	b103      	cbz	r3, 80017a8 <_fstat_r+0x1c>
 80017a6:	6023      	str	r3, [r4, #0]
 80017a8:	bd38      	pop	{r3, r4, r5, pc}
 80017aa:	bf00      	nop
 80017ac:	24000200 	.word	0x24000200

080017b0 <_isatty_r>:
 80017b0:	b538      	push	{r3, r4, r5, lr}
 80017b2:	4d06      	ldr	r5, [pc, #24]	@ (80017cc <_isatty_r+0x1c>)
 80017b4:	2300      	movs	r3, #0
 80017b6:	4604      	mov	r4, r0
 80017b8:	4608      	mov	r0, r1
 80017ba:	602b      	str	r3, [r5, #0]
 80017bc:	f7fe ff7d 	bl	80006ba <_isatty>
 80017c0:	1c43      	adds	r3, r0, #1
 80017c2:	d102      	bne.n	80017ca <_isatty_r+0x1a>
 80017c4:	682b      	ldr	r3, [r5, #0]
 80017c6:	b103      	cbz	r3, 80017ca <_isatty_r+0x1a>
 80017c8:	6023      	str	r3, [r4, #0]
 80017ca:	bd38      	pop	{r3, r4, r5, pc}
 80017cc:	24000200 	.word	0x24000200

080017d0 <_kill_r>:
 80017d0:	b538      	push	{r3, r4, r5, lr}
 80017d2:	4d07      	ldr	r5, [pc, #28]	@ (80017f0 <_kill_r+0x20>)
 80017d4:	2300      	movs	r3, #0
 80017d6:	4604      	mov	r4, r0
 80017d8:	4608      	mov	r0, r1
 80017da:	4611      	mov	r1, r2
 80017dc:	602b      	str	r3, [r5, #0]
 80017de:	f7fe fefe 	bl	80005de <_kill>
 80017e2:	1c43      	adds	r3, r0, #1
 80017e4:	d102      	bne.n	80017ec <_kill_r+0x1c>
 80017e6:	682b      	ldr	r3, [r5, #0]
 80017e8:	b103      	cbz	r3, 80017ec <_kill_r+0x1c>
 80017ea:	6023      	str	r3, [r4, #0]
 80017ec:	bd38      	pop	{r3, r4, r5, pc}
 80017ee:	bf00      	nop
 80017f0:	24000200 	.word	0x24000200

080017f4 <_getpid_r>:
 80017f4:	f7fe beec 	b.w	80005d0 <_getpid>

080017f8 <_init>:
 80017f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017fa:	bf00      	nop
 80017fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80017fe:	bc08      	pop	{r3}
 8001800:	469e      	mov	lr, r3
 8001802:	4770      	bx	lr

08001804 <_fini>:
 8001804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001806:	bf00      	nop
 8001808:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800180a:	bc08      	pop	{r3}
 800180c:	469e      	mov	lr, r3
 800180e:	4770      	bx	lr
